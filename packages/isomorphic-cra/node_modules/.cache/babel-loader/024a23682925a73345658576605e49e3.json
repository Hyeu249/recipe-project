{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/FirestoreCRUD/Investor/Investor.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport Box from '@iso/components/utility/box';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Popconfirms from '@iso/components/Feedback/Popconfirm';\nimport investorActions from '@iso/redux/investors/actions';\nimport { EditIcon, DeleteIcon } from '@iso/config/icon.config';\nimport { ActionBtn, Fieldset, Form, Label, TitleWrapper, ActionWrapper, ComponentTitle, TableWrapper, ButtonHolders } from './Investor.styles';\nconst {\n  saveIntoFireStore,\n  loadFromFireStore,\n  resetFireStoreDocuments,\n  toggleModal,\n  update\n} = investorActions;\nexport default function Investors(props) {\n  const {\n    investors,\n    investor,\n    modalActive\n  } = useSelector(state => state.Investors);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(loadFromFireStore());\n  }, [dispatch]);\n\n  const handleRecord = (actionName, investor) => {\n    if (investor.key && actionName !== 'delete') actionName = 'update';\n    dispatch(saveIntoFireStore(investor, actionName));\n  };\n\n  const resetRecords = () => {\n    dispatch(resetFireStoreDocuments());\n  };\n\n  const handleModal = (investor = null) => {\n    dispatch(toggleModal(investor));\n  };\n\n  const onRecordChange = (key, event) => {\n    if (key) investor[key] = event.target.value;\n    dispatch(update(investor));\n  };\n\n  const dataSource = [];\n  Object.keys(investors).map((investor, index) => {\n    return dataSource.push({ ...investors[investor],\n      key: investor\n    });\n  });\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {}\n  };\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n      return 0;\n    }\n  }, {\n    title: 'Company Name',\n    dataIndex: 'company_name',\n    key: 'company_name',\n    sorter: (a, b) => {\n      if (a.company_name < b.company_name) return -1;\n      if (a.company_name > b.company_name) return 1;\n      return 0;\n    }\n  }, {\n    title: 'Job Title',\n    dataIndex: 'job_title',\n    key: 'job_title',\n    sorter: (a, b) => {\n      if (a.job_title < b.job_title) return -1;\n      if (a.job_title > b.job_title) return 1;\n      return 0;\n    }\n  }, {\n    title: 'Location',\n    dataIndex: 'location',\n    key: 'location',\n    sorter: (a, b) => {\n      if (a.location < b.location) return -1;\n      if (a.location > b.location) return 1;\n      return 0;\n    }\n  }, {\n    title: 'Number of Investments',\n    dataIndex: 'investment_count',\n    key: 'investment_count',\n    width: '190px',\n    sorter: (a, b) => parseInt(a.investment_count, 10) - parseInt(b.investment_count, 10)\n  }, {\n    title: 'Number of Exists',\n    dataIndex: 'exists_count',\n    key: 'exists_count',\n    width: '160px',\n    sorter: (a, b) => parseInt(a.exists_count, 10) - parseInt(b.exists_count, 10)\n  }, {\n    title: 'Actions',\n    width: '60px',\n    key: 'action',\n    render: (text, row) => {\n      return /*#__PURE__*/React.createElement(ActionWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleModal(row),\n        href: \"# \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EditIcon, {\n        size: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Popconfirms, {\n        title: \"Are you sure to delete this record?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        placement: \"topRight\",\n        onConfirm: () => handleRecord('delete', row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"deleteBtn\",\n        href: \"# \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        size: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(LayoutContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentHolder, {\n    style: {\n      marginTop: 0,\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComponentTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Investors\"), /*#__PURE__*/React.createElement(ButtonHolders, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    type: \"danger\",\n    onClick: resetRecords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Reset record\"), /*#__PURE__*/React.createElement(ActionBtn, {\n    type: \"primary\",\n    onClick: () => handleModal(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Add new record\"))), /*#__PURE__*/React.createElement(Modal, {\n    visible: modalActive,\n    onClose: () => dispatch(toggleModal(null)),\n    title: investor.key ? 'Update investor' : 'Add New investor',\n    okText: investor.key ? 'Update investor' : 'Add investor',\n    onOk: () => handleRecord('insert', investor),\n    onCancel: () => dispatch(toggleModal(null)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Name\",\n    placeholder: \"Enter owner name\",\n    value: investor.name,\n    onChange: e => onRecordChange('name', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Company Name\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Company Name\",\n    placeholder: \"Enter the company name\",\n    value: investor.company_name,\n    onChange: e => onRecordChange('company_name', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Job TItle\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Job Title\",\n    placeholder: \"Enter the job title\",\n    value: investor.job_title,\n    onChange: e => onRecordChange('job_title', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Location\",\n    placeholder: \"Enter Description\",\n    value: investor.location,\n    onChange: e => onRecordChange('location', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \"Number of Investments\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Number of Investments\",\n    placeholder: \"Enter number of investments\",\n    value: investor.investment_count,\n    onChange: e => onRecordChange('investment_count', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Fieldset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Number of Exists\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"Number of Exists\",\n    placeholder: \"Enter Number of Exists\",\n    value: investor.exists_count,\n    onChange: e => onRecordChange('exists_count', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(TableWrapper, {\n    rowKey: \"key\",\n    columns: columns,\n    rowSelection: rowSelection,\n    loading: props.isLoading,\n    dataSource: dataSource,\n    className: \"isoSimpleTable\",\n    pagination: {\n      // defaultPageSize: 1,\n      hideOnSinglePage: true,\n      total: dataSource.length,\n      showTotal: (total, range) => {\n        return `Showing ${range[0]}-${range[1]} of ${dataSource.length} Results`;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/FirestoreCRUD/Investor/Investor.js"],"names":["React","useDispatch","useSelector","Input","Modal","LayoutContentWrapper","Box","ContentHolder","Popconfirms","investorActions","EditIcon","DeleteIcon","ActionBtn","Fieldset","Form","Label","TitleWrapper","ActionWrapper","ComponentTitle","TableWrapper","ButtonHolders","saveIntoFireStore","loadFromFireStore","resetFireStoreDocuments","toggleModal","update","Investors","props","investors","investor","modalActive","state","dispatch","useEffect","handleRecord","actionName","key","resetRecords","handleModal","onRecordChange","event","target","value","dataSource","Object","keys","map","index","push","rowSelection","onChange","selectedRowKeys","selectedRows","columns","title","dataIndex","sorter","a","b","name","company_name","job_title","location","width","parseInt","investment_count","exists_count","render","text","row","marginTop","overflow","e","isLoading","hideOnSinglePage","total","length","showTotal","range"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\nimport Box from '@iso/components/utility/box';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Popconfirms from '@iso/components/Feedback/Popconfirm';\nimport investorActions from '@iso/redux/investors/actions';\nimport { EditIcon, DeleteIcon } from '@iso/config/icon.config';\nimport {\n  ActionBtn,\n  Fieldset,\n  Form,\n  Label,\n  TitleWrapper,\n  ActionWrapper,\n  ComponentTitle,\n  TableWrapper,\n  ButtonHolders,\n} from './Investor.styles';\nconst {\n  saveIntoFireStore,\n  loadFromFireStore,\n  resetFireStoreDocuments,\n  toggleModal,\n  update,\n} = investorActions;\nexport default function Investors(props) {\n  const { investors, investor, modalActive } = useSelector(\n    (state) => state.Investors\n  );\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(loadFromFireStore());\n  }, [dispatch]);\n  const handleRecord = (actionName, investor) => {\n    if (investor.key && actionName !== 'delete') actionName = 'update';\n    dispatch(saveIntoFireStore(investor, actionName));\n  };\n  const resetRecords = () => {\n    dispatch(resetFireStoreDocuments());\n  };\n\n  const handleModal = (investor = null) => {\n    dispatch(toggleModal(investor));\n  };\n\n  const onRecordChange = (key, event) => {\n    if (key) investor[key] = event.target.value;\n    dispatch(update(investor));\n  };\n\n  const dataSource = [];\n  Object.keys(investors).map((investor, index) => {\n    return dataSource.push({\n      ...investors[investor],\n      key: investor,\n    });\n  });\n\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {},\n  };\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a, b) => {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      },\n    },\n    {\n      title: 'Company Name',\n      dataIndex: 'company_name',\n      key: 'company_name',\n      sorter: (a, b) => {\n        if (a.company_name < b.company_name) return -1;\n        if (a.company_name > b.company_name) return 1;\n        return 0;\n      },\n    },\n    {\n      title: 'Job Title',\n      dataIndex: 'job_title',\n      key: 'job_title',\n      sorter: (a, b) => {\n        if (a.job_title < b.job_title) return -1;\n        if (a.job_title > b.job_title) return 1;\n        return 0;\n      },\n    },\n    {\n      title: 'Location',\n      dataIndex: 'location',\n      key: 'location',\n      sorter: (a, b) => {\n        if (a.location < b.location) return -1;\n        if (a.location > b.location) return 1;\n        return 0;\n      },\n    },\n    {\n      title: 'Number of Investments',\n      dataIndex: 'investment_count',\n      key: 'investment_count',\n      width: '190px',\n      sorter: (a, b) =>\n        parseInt(a.investment_count, 10) - parseInt(b.investment_count, 10),\n    },\n    {\n      title: 'Number of Exists',\n      dataIndex: 'exists_count',\n      key: 'exists_count',\n      width: '160px',\n      sorter: (a, b) =>\n        parseInt(a.exists_count, 10) - parseInt(b.exists_count, 10),\n    },\n    {\n      title: 'Actions',\n      width: '60px',\n      key: 'action',\n      render: (text, row) => {\n        return (\n          <ActionWrapper>\n            <a onClick={() => handleModal(row)} href=\"# \">\n              <EditIcon size={18} />\n            </a>\n\n            <Popconfirms\n              title=\"Are you sure to delete this record?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              placement=\"topRight\"\n              onConfirm={() => handleRecord('delete', row)}\n            >\n              <a className=\"deleteBtn\" href=\"# \">\n                <DeleteIcon size={18} />\n              </a>\n            </Popconfirms>\n          </ActionWrapper>\n        );\n      },\n    },\n  ];\n\n  return (\n    <LayoutContentWrapper>\n      <Box>\n        <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\n          <TitleWrapper>\n            <ComponentTitle>Investors</ComponentTitle>\n\n            <ButtonHolders>\n              <ActionBtn type=\"danger\" onClick={resetRecords}>\n                Reset record\n              </ActionBtn>\n\n              <ActionBtn type=\"primary\" onClick={() => handleModal(null)}>\n                Add new record\n              </ActionBtn>\n            </ButtonHolders>\n          </TitleWrapper>\n\n          <Modal\n            visible={modalActive}\n            onClose={() => dispatch(toggleModal(null))}\n            title={investor.key ? 'Update investor' : 'Add New investor'}\n            okText={investor.key ? 'Update investor' : 'Add investor'}\n            onOk={() => handleRecord('insert', investor)}\n            onCancel={() => dispatch(toggleModal(null))}\n          >\n            <Form>\n              <Fieldset>\n                <Label>Name</Label>\n                <Input\n                  label=\"Name\"\n                  placeholder=\"Enter owner name\"\n                  value={investor.name}\n                  onChange={(e) => onRecordChange('name', e)}\n                />\n              </Fieldset>\n\n              <Fieldset>\n                <Label>Company Name</Label>\n                <Input\n                  label=\"Company Name\"\n                  placeholder=\"Enter the company name\"\n                  value={investor.company_name}\n                  onChange={(e) => onRecordChange('company_name', e)}\n                />\n              </Fieldset>\n\n              <Fieldset>\n                <Label>Job TItle</Label>\n                <Input\n                  label=\"Job Title\"\n                  placeholder=\"Enter the job title\"\n                  value={investor.job_title}\n                  onChange={(e) => onRecordChange('job_title', e)}\n                />\n              </Fieldset>\n\n              <Fieldset>\n                <Label>Location</Label>\n                <Input\n                  label=\"Location\"\n                  placeholder=\"Enter Description\"\n                  value={investor.location}\n                  onChange={(e) => onRecordChange('location', e)}\n                />\n              </Fieldset>\n\n              <Fieldset>\n                <Label>Number of Investments</Label>\n                <Input\n                  label=\"Number of Investments\"\n                  placeholder=\"Enter number of investments\"\n                  value={investor.investment_count}\n                  onChange={(e) => onRecordChange('investment_count', e)}\n                />\n              </Fieldset>\n\n              <Fieldset>\n                <Label>Number of Exists</Label>\n                <Input\n                  label=\"Number of Exists\"\n                  placeholder=\"Enter Number of Exists\"\n                  value={investor.exists_count}\n                  onChange={(e) => onRecordChange('exists_count', e)}\n                />\n              </Fieldset>\n            </Form>\n          </Modal>\n\n          <TableWrapper\n            rowKey=\"key\"\n            columns={columns}\n            rowSelection={rowSelection}\n            loading={props.isLoading}\n            dataSource={dataSource}\n            className=\"isoSimpleTable\"\n            pagination={{\n              // defaultPageSize: 1,\n              hideOnSinglePage: true,\n              total: dataSource.length,\n              showTotal: (total, range) => {\n                return `Showing ${range[0]}-${range[1]} of ${dataSource.length} Results`;\n              },\n            }}\n          />\n        </ContentHolder>\n      </Box>\n    </LayoutContentWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}