{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/ScrumBoard/Board/BoardList/BoardList.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport scrumBoardActions from \"@iso/redux/scrumBoard/actions\";\nimport NoBoardFounds from \"../BoardNotFound/BoardNotFound\";\nimport BoardListCard from \"./BoardListCard/BoardListCard\";\nimport AppLayout from \"../../AppLayout/AppLayout\";\nimport { filterProjects } from \"@iso/lib/helpers/filterProjects\";\nimport { Table } from \"./BoardList.style\";\n\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher\n}) {\n  useEffect(() => {\n    boardsRenderWatcher(); // -----> watching boards to render\n  }, [boardsRenderWatcher]);\n  console.log(\"boards: \", boards);\n  console.log(\"history: \", history);\n  console.log(\"match: \", match);\n  console.log(\"--------------------------------\");\n\n  const handleEdit = board => {\n    editBoard(board);\n    history.push(`/dashboard/scrum-board/${board.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(AppLayout, {\n    history: history,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, !isEmpty(boards) ? /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(NoBoardFounds, {\n    history: history,\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default connect(state => ({\n  boards: filterProjects(state.scrumBoard.boards, state.scrumBoard.searchText)\n}), { ...scrumBoardActions\n})(BoardLists);","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/ScrumBoard/Board/BoardList/BoardList.js"],"names":["React","useEffect","connect","isEmpty","scrumBoardActions","NoBoardFounds","BoardListCard","AppLayout","filterProjects","Table","BoardLists","boards","deleteBoardWatcher","editBoard","history","match","boardsRenderWatcher","console","log","handleEdit","board","push","id","state","scrumBoard","searchText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,MADkB;AAElBC,EAAAA,kBAFkB;AAGlBC,EAAAA,SAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,KALkB;AAMlBC,EAAAA;AANkB,CAApB,EAOG;AACDf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,mBAAmB,GADL,CACS;AACxB,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAEA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BP,IAAAA,SAAS,CAACO,KAAD,CAAT;AACAN,IAAAA,OAAO,CAACO,IAAR,CAAc,0BAAyBD,KAAK,CAACE,EAAG,EAAhD;AACD,GAHD;;AAKA,sBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAER,OAApB;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACZ,OAAO,CAACQ,MAAD,CAAR,gBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAYC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEG,OAAxB;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD;;AAED,eAAeb,OAAO,CACnBqB,KAAD,KAAY;AACVZ,EAAAA,MAAM,EAAEH,cAAc,CACpBe,KAAK,CAACC,UAAN,CAAiBb,MADG,EAEpBY,KAAK,CAACC,UAAN,CAAiBC,UAFG;AADZ,CAAZ,CADoB,EAOpB,EAAE,GAAGrB;AAAL,CAPoB,CAAP,CAQbM,UARa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport scrumBoardActions from \"@iso/redux/scrumBoard/actions\";\nimport NoBoardFounds from \"../BoardNotFound/BoardNotFound\";\nimport BoardListCard from \"./BoardListCard/BoardListCard\";\nimport AppLayout from \"../../AppLayout/AppLayout\";\nimport { filterProjects } from \"@iso/lib/helpers/filterProjects\";\nimport { Table } from \"./BoardList.style\";\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher,\n}) {\n  useEffect(() => {\n    boardsRenderWatcher(); // -----> watching boards to render\n  }, [boardsRenderWatcher]);\n\n  console.log(\"boards: \", boards);\n  console.log(\"history: \", history);\n  console.log(\"match: \", match);\n  console.log(\"--------------------------------\");\n\n  const handleEdit = (board) => {\n    editBoard(board);\n    history.push(`/dashboard/scrum-board/${board.id}`);\n  };\n\n  return (\n    <AppLayout history={history} match={match}>\n      {!isEmpty(boards) ? (\n        <Table>\n          {/* {Object.values(boards).map((board) => (\n            <BoardListCard\n              key={board.id}\n              item={board}\n              onDelete={() => deleteBoardWatcher(board.id)}\n              onEdit={() => handleEdit(board)}\n            />\n          ))} */}\n        </Table>\n      ) : (\n        <NoBoardFounds history={history} match={match} />\n      )}\n    </AppLayout>\n  );\n}\n\nexport default connect(\n  (state) => ({\n    boards: filterProjects(\n      state.scrumBoard.boards,\n      state.scrumBoard.searchText\n    ),\n  }),\n  { ...scrumBoardActions }\n)(BoardLists);\n"]},"metadata":{},"sourceType":"module"}