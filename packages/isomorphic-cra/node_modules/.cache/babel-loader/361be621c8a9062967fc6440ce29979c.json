{"ast":null,"code":"import addDays from 'date-fns/addDays';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual'; // export const startDate = new Date(new Date().setMonth(1, 1));\n// export const endDate = new Date();\n\nexport const startDate = new Date('2019-01-01');\nexport const endDate = new Date('2019-12-31');\nexport function getHeatMapData() {\n  let dataPoints = {};\n  let currDate = startDate;\n\n  while (isBefore(currDate, endDate) || isEqual(currDate, endDate)) {\n    const count = pickRandomNumber(10, 1000);\n    dataPoints[currDate.getTime() / 1000] = count;\n    currDate = addDays(currDate, 1);\n  }\n\n  return dataPoints;\n}\n\nfunction pickRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/isomorphic-all-playAround/shared/containers/Charts/FrappeChart/utils.js"],"names":["addDays","isBefore","isEqual","startDate","Date","endDate","getHeatMapData","dataPoints","currDate","count","pickRandomNumber","getTime","min","max","Math","floor","random"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,IAAIC,IAAJ,CAAS,YAAT,CAAlB;AACP,OAAO,MAAMC,OAAO,GAAG,IAAID,IAAJ,CAAS,YAAT,CAAhB;AAEP,OAAO,SAASE,cAAT,GAA0B;AAC/B,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAQ,GAAGL,SAAf;;AACA,SAAOF,QAAQ,CAACO,QAAD,EAAWH,OAAX,CAAR,IAA+BH,OAAO,CAACM,QAAD,EAAWH,OAAX,CAA7C,EAAkE;AAChE,UAAMI,KAAK,GAAGC,gBAAgB,CAAC,EAAD,EAAK,IAAL,CAA9B;AACAH,IAAAA,UAAU,CAACC,QAAQ,CAACG,OAAT,KAAqB,IAAtB,CAAV,GAAwCF,KAAxC;AACAD,IAAAA,QAAQ,GAAGR,OAAO,CAACQ,QAAD,EAAW,CAAX,CAAlB;AACD;;AACD,SAAOD,UAAP;AACD;;AAED,SAASG,gBAAT,CAA0BE,GAA1B,EAA+BC,GAA/B,EAAoC;AAClC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD","sourcesContent":["import addDays from 'date-fns/addDays';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual';\n// export const startDate = new Date(new Date().setMonth(1, 1));\n// export const endDate = new Date();\nexport const startDate = new Date('2019-01-01');\nexport const endDate = new Date('2019-12-31');\n\nexport function getHeatMapData() {\n  let dataPoints = {};\n  let currDate = startDate;\n  while (isBefore(currDate, endDate) || isEqual(currDate, endDate)) {\n    const count = pickRandomNumber(10, 1000);\n    dataPoints[currDate.getTime() / 1000] = count;\n    currDate = addDays(currDate, 1);\n  }\n  return dataPoints;\n}\n\nfunction pickRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n"]},"metadata":{},"sourceType":"module"}