{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/Contacts/Contacts.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport contactActions from \"@iso/redux/contacts/actions\";\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\nimport Button from \"@iso/components/uielements/button\";\nimport ContactList from \"@iso/components/Contacts/ContactList\";\nimport SingleContactView from \"@iso/components/Contacts/SingleView\";\nimport EditContactView from \"@iso/components/Contacts/EditView\";\nimport DeleteButton from \"@iso/components/Contacts/DeleteButton\";\nimport { otherAttributes } from \"./data\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { ContactsWrapper } from \"./Contacts.styles\";\nimport Scrollbar from \"@iso/components/utility/customScrollBar\";\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange\n} = contactActions;\nconst {\n  Content\n} = _Layout;\nexport default function Contacts() {\n  const {\n    contacts,\n    selectedId,\n    editView\n  } = useSelector(state => state.Contacts);\n  const dispatch = useDispatch();\n  const selectedContact = selectedId ? contacts.filter(contact => contact.id === selectedId)[0] : null;\n\n  const onVIewChange = () => {\n    dispatch(viewChange(!editView));\n  };\n\n  console.log(selectedContact);\n  return /*#__PURE__*/React.createElement(ContactsWrapper, {\n    className: \"isomorphicContacts\",\n    style: {\n      background: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoContactListBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContactList, {\n    contacts: contacts,\n    selectedId: selectedId,\n    changeContact: id => dispatch(changeContact(id)),\n    deleteContact: e => dispatch(deleteContact(e)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Layout, {\n    className: \"isoContactBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, selectedContact ? /*#__PURE__*/React.createElement(Content, {\n    className: \"isoContactBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoContactControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: onVIewChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, editView ? /*#__PURE__*/React.createElement(CheckOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(EditOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(DeleteButton, {\n    deleteContact: id => dispatch(deleteContact(id)),\n    contact: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(addContact()),\n    className: \"isoAddContactBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Scrollbar, {\n    className: \"contactBoxScrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, editView ? /*#__PURE__*/React.createElement(EditContactView, {\n    contact: selectedContact,\n    editContact: contact => dispatch(editContact(contact)),\n    otherAttributes: otherAttributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(SingleContactView, {\n    contact: selectedContact,\n    otherAttributes: otherAttributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoContactControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(addContact()),\n    className: \"isoAddContactBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/Contacts/Contacts.js"],"names":["React","useDispatch","useSelector","contactActions","CheckOutlined","EditOutlined","Button","ContactList","SingleContactView","EditContactView","DeleteButton","otherAttributes","IntlMessages","ContactsWrapper","Scrollbar","changeContact","addContact","editContact","deleteContact","viewChange","Content","Contacts","contacts","selectedId","editView","state","dispatch","selectedContact","filter","contact","id","onVIewChange","console","log","background","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport contactActions from \"@iso/redux/contacts/actions\";\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Layout } from \"antd\";\nimport Button from \"@iso/components/uielements/button\";\nimport ContactList from \"@iso/components/Contacts/ContactList\";\nimport SingleContactView from \"@iso/components/Contacts/SingleView\";\nimport EditContactView from \"@iso/components/Contacts/EditView\";\nimport DeleteButton from \"@iso/components/Contacts/DeleteButton\";\nimport { otherAttributes } from \"./data\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { ContactsWrapper } from \"./Contacts.styles\";\nimport Scrollbar from \"@iso/components/utility/customScrollBar\";\n\nconst { changeContact, addContact, editContact, deleteContact, viewChange } =\n  contactActions;\n\nconst { Content } = Layout;\nexport default function Contacts() {\n  const { contacts, selectedId, editView } = useSelector(\n    (state) => state.Contacts\n  );\n\n  const dispatch = useDispatch();\n\n  const selectedContact = selectedId\n    ? contacts.filter((contact) => contact.id === selectedId)[0]\n    : null;\n\n  const onVIewChange = () => {\n    dispatch(viewChange(!editView));\n  };\n  console.log(selectedContact);\n  return (\n    <ContactsWrapper\n      className=\"isomorphicContacts\"\n      style={{ background: \"none\" }}\n    >\n      <div className=\"isoContactListBar\">\n        <ContactList\n          contacts={contacts}\n          selectedId={selectedId}\n          changeContact={(id) => dispatch(changeContact(id))}\n          deleteContact={(e) => dispatch(deleteContact(e))}\n        />\n      </div>\n      <Layout className=\"isoContactBoxWrapper\">\n        {selectedContact ? (\n          <Content className=\"isoContactBox\">\n            <div className=\"isoContactControl\">\n              <Button type=\"default\" onClick={onVIewChange}>\n                {editView ? <CheckOutlined /> : <EditOutlined />}\n              </Button>\n              <DeleteButton\n                deleteContact={(id) => dispatch(deleteContact(id))}\n                contact={selectedContact}\n              />\n              <Button\n                type=\"primary\"\n                onClick={() => dispatch(addContact())}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n\n            <Scrollbar className=\"contactBoxScrollbar\">\n              {editView ? (\n                <EditContactView\n                  contact={selectedContact}\n                  editContact={(contact) => dispatch(editContact(contact))}\n                  otherAttributes={otherAttributes}\n                />\n              ) : (\n                <SingleContactView\n                  contact={selectedContact}\n                  otherAttributes={otherAttributes}\n                />\n              )}\n            </Scrollbar>\n          </Content>\n        ) : (\n          <div className=\"isoContactControl\">\n            <Button\n              type=\"primary\"\n              onClick={() => dispatch(addContact())}\n              className=\"isoAddContactBtn\"\n            >\n              <IntlMessages id=\"contactlist.addNewContact\" />\n            </Button>\n          </div>\n        )}\n      </Layout>\n    </ContactsWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}