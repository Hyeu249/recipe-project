{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/shared/containers/Quiz/SingleQuiz.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\nimport Question from './Question';\nimport GettingStartedQuiz from './GettingStartedQuiz'; // const { getQuizData } = actions;\n\nfunction SingleQuiz(props) {\n  useEffect(() => {\n    props.getQuestionData();\n  }, []);\n  const {\n    rowStyle,\n    colStyle,\n    gutter\n  } = basicStyle;\n  const {\n    questions,\n    activeQuestion,\n    total,\n    submitted,\n    answers,\n    correct,\n    wrong,\n    gettingStarted\n  } = props.quiz;\n  console.log(wrong);\n  console.log(correct);\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 24,\n    sm: 24,\n    xs: 24,\n    style: colStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, questions.data ? gettingStarted ? /*#__PURE__*/React.createElement(Box, {\n    title: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: questions.data[activeQuestion].question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ContentHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Question, {\n    question: questions.data[activeQuestion],\n    setQuestionAnswer: props.setQuestionAnswer,\n    nextQuestion: props.nextQuestion,\n    correct: correct,\n    wrong: wrong,\n    answers: answers,\n    total: total,\n    activeQuestion: activeQuestion,\n    submitted: submitted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(GettingStartedQuiz, {\n    gettingStarted: gettingStarted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }) : null)));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz\n  };\n}\n\nexport default connect(mapStateToProps, { ...actions\n})(SingleQuiz);","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/containers/Quiz/SingleQuiz.js"],"names":["React","useEffect","Fragment","connect","ContentHolder","Box","LayoutWrapper","IntlMessages","basicStyle","actions","Question","GettingStartedQuiz","SingleQuiz","props","getQuestionData","rowStyle","colStyle","gutter","questions","activeQuestion","total","submitted","answers","correct","wrong","gettingStarted","quiz","console","log","data","question","setQuestionAnswer","nextQuestion","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\nimport Question from './Question';\nimport GettingStartedQuiz from './GettingStartedQuiz';\n\n// const { getQuizData } = actions;\n\nfunction SingleQuiz(props) {\n  useEffect(() => {\n    props.getQuestionData();\n  }, []);\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const {\n    questions,\n    activeQuestion,\n    total,\n    submitted,\n    answers,\n    correct,\n    wrong,\n    gettingStarted,\n  } = props.quiz;\n  console.log(wrong);\n  console.log(correct);\n  return (\n    <LayoutWrapper>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          {questions.data ? (\n            gettingStarted ? (\n              <Box\n                title={\n                  <IntlMessages id={questions.data[activeQuestion].question} />\n                }\n              >\n                <ContentHolder>\n                  <Question\n                    question={questions.data[activeQuestion]}\n                    setQuestionAnswer={props.setQuestionAnswer}\n                    nextQuestion={props.nextQuestion}\n                    correct={correct}\n                    wrong={wrong}\n                    answers={answers}\n                    total={total}\n                    activeQuestion={activeQuestion}\n                    submitted={submitted}\n                  />\n                </ContentHolder>\n              </Box>\n            ) : (\n              <GettingStartedQuiz gettingStarted={gettingStarted} />\n            )\n          ) : null}\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { ...actions }\n)(SingleQuiz);\n"]},"metadata":{},"sourceType":"module"}