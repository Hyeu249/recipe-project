{"ast":null,"code":"import zhMessages from \"../locales/zh-Hans.json\";\nconst zh_text = \"输 新 密 码 并 进 行 确 认 用 户 名 密 码 或 者 点 击 任 意 按 钮 未 读 电 子 邮 件 电 子 邮 件 地 址 查 看 购 物 车 查 看 全 部 我 的 简 历\";\nzhMessages[\"sidebar.publisher\"] = \"输 入 新\";\n\nconst Zhlang = recipeValues => {\n  const uniqueRecipes = recipeValues === null || recipeValues === void 0 ? void 0 : recipeValues.map(recipe => recipe.publisher).filter((value, index, self) => self.indexOf(value) === index).map(_recipe => {\n    const recipe = _recipe.replaceAll(\" \", \"-\").toLowerCase();\n\n    return {\n      key: _recipe,\n      label: `sidebar.${recipe}`\n    };\n  });\n\n  if (recipeValues) {\n    uniqueRecipes.forEach(recipe => {\n      const wordLength = recipe.key.split(\" \").length;\n      const zh_text_array = zh_text.split(\" \");\n      const randomNumber = Math.floor(Math.random() * (zh_text_array.length - wordLength - 1));\n      const text = zh_text_array.slice(randomNumber, randomNumber + wordLength).join(\" \");\n      zhMessages[recipe === null || recipe === void 0 ? void 0 : recipe.label] = text;\n    });\n  }\n\n  const ZhLan_data = {\n    messages: { ...zhMessages\n    },\n    antd: null,\n    locale: \"zh-Hans-CN\"\n  };\n  return ZhLan_data;\n};\n\nexport default Zhlang;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/config/translation/entries/zh-Hans-CN.js"],"names":["zhMessages","zh_text","Zhlang","recipeValues","uniqueRecipes","map","recipe","publisher","filter","value","index","self","indexOf","_recipe","replaceAll","toLowerCase","key","label","forEach","wordLength","split","length","zh_text_array","randomNumber","Math","floor","random","text","slice","join","ZhLan_data","messages","antd","locale"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,OAAO,GACX,+FADF;AAGAD,UAAU,CAAC,mBAAD,CAAV,GAAkC,OAAlC;;AAEA,MAAME,MAAM,GAAIC,YAAD,IAAkB;AAC/B,QAAMC,aAAa,GAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAC9BE,GADkB,CACbC,MAAD,IAAYA,MAAM,CAACC,SADL,EAEnBC,MAFmB,CAEZ,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAFpC,EAGnBL,GAHmB,CAGdQ,OAAD,IAAa;AAChB,UAAMP,MAAM,GAAGO,OAAO,CAACC,UAAR,CAAmB,GAAnB,EAAwB,GAAxB,EAA6BC,WAA7B,EAAf;;AACA,WAAO;AACLC,MAAAA,GAAG,EAAEH,OADA;AAELI,MAAAA,KAAK,EAAG,WAAUX,MAAO;AAFpB,KAAP;AAID,GATmB,CAAtB;;AAWA,MAAIH,YAAJ,EAAkB;AAChBC,IAAAA,aAAa,CAACc,OAAd,CAAuBZ,MAAD,IAAY;AAChC,YAAMa,UAAU,GAAGb,MAAM,CAACU,GAAP,CAAWI,KAAX,CAAiB,GAAjB,EAAsBC,MAAzC;AACA,YAAMC,aAAa,GAAGrB,OAAO,CAACmB,KAAR,CAAc,GAAd,CAAtB;AACA,YAAMG,YAAY,GAAGC,IAAI,CAACC,KAAL,CACnBD,IAAI,CAACE,MAAL,MAAiBJ,aAAa,CAACD,MAAd,GAAuBF,UAAvB,GAAoC,CAArD,CADmB,CAArB;AAIA,YAAMQ,IAAI,GAAGL,aAAa,CACvBM,KADU,CACJL,YADI,EACUA,YAAY,GAAGJ,UADzB,EAEVU,IAFU,CAEL,GAFK,CAAb;AAIA7B,MAAAA,UAAU,CAACM,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEW,KAAT,CAAV,GAA4BU,IAA5B;AACD,KAZD;AAaD;;AAED,QAAMG,UAAU,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EACR,GAAG/B;AADK,KADO;AAIjBgC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,MAAM,EAAE;AALS,GAAnB;AAQA,SAAOH,UAAP;AACD,CArCD;;AAuCA,eAAe5B,MAAf","sourcesContent":["import zhMessages from \"../locales/zh-Hans.json\";\n\nconst zh_text =\n  \"输 新 密 码 并 进 行 确 认 用 户 名 密 码 或 者 点 击 任 意 按 钮 未 读 电 子 邮 件 电 子 邮 件 地 址 查 看 购 物 车 查 看 全 部 我 的 简 历\";\n\nzhMessages[\"sidebar.publisher\"] = \"输 入 新\";\n\nconst Zhlang = (recipeValues) => {\n  const uniqueRecipes = recipeValues\n    ?.map((recipe) => recipe.publisher)\n    .filter((value, index, self) => self.indexOf(value) === index)\n    .map((_recipe) => {\n      const recipe = _recipe.replaceAll(\" \", \"-\").toLowerCase();\n      return {\n        key: _recipe,\n        label: `sidebar.${recipe}`,\n      };\n    });\n\n  if (recipeValues) {\n    uniqueRecipes.forEach((recipe) => {\n      const wordLength = recipe.key.split(\" \").length;\n      const zh_text_array = zh_text.split(\" \");\n      const randomNumber = Math.floor(\n        Math.random() * (zh_text_array.length - wordLength - 1)\n      );\n\n      const text = zh_text_array\n        .slice(randomNumber, randomNumber + wordLength)\n        .join(\" \");\n\n      zhMessages[recipe?.label] = text;\n    });\n  }\n\n  const ZhLan_data = {\n    messages: {\n      ...zhMessages,\n    },\n    antd: null,\n    locale: \"zh-Hans-CN\",\n  };\n\n  return ZhLan_data;\n};\n\nexport default Zhlang;\n"]},"metadata":{},"sourceType":"module"}