{"ast":null,"code":"import \"antd/es/tree/style/css\";\nimport _Tree from \"antd/es/tree\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/isomorphic-all-playAround/shared/containers/UIElements/Tree/SearchableTree.js\";\nimport React from 'react';\nconst {\n  Search\n} = _Input;\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nconst dataList = [];\n\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const {\n      key\n    } = node;\n    dataList.push({\n      key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nclass SearchTree extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n\n    this.onExpand = expandedKeys => {\n      this.setState({\n        expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      const expandedKeys = dataList.map(item => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter((item, i, self) => item && self.indexOf(item) === i);\n      this.setState({\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      searchValue,\n      expandedKeys,\n      autoExpandParent\n    } = this.state;\n\n    const loop = data => data.map(item => {\n      const index = item.title.indexOf(searchValue);\n      const beforeStr = item.title.substr(0, index);\n      const afterStr = item.title.substr(index + searchValue.length);\n      const title = index > -1 ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, beforeStr, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"site-tree-search-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, searchValue), afterStr) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, item.title);\n\n      if (item.children) {\n        return {\n          title,\n          key: item.key,\n          children: loop(item.children)\n        };\n      }\n\n      return {\n        title,\n        key: item.key\n      };\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      style: {\n        marginBottom: 8\n      },\n      placeholder: \"Search\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(_Tree, {\n      onExpand: this.onExpand,\n      expandedKeys: expandedKeys,\n      autoExpandParent: autoExpandParent,\n      treeData: loop(gData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchTree;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/isomorphic-all-playAround/shared/containers/UIElements/Tree/SearchableTree.js"],"names":["React","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","SearchTree","Component","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","render","loop","beforeStr","substr","afterStr","marginBottom"],"mappings":"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","sourcesContent":["import { Tree, Input } from 'antd';\nimport React from 'react';\n\nconst { Search } = Input;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = (data) => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const { key } = node;\n    dataList.push({ key, title: key });\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some((item) => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey;\n};\n\nclass SearchTree extends React.Component {\n  state = {\n    expandedKeys: [],\n    searchValue: '',\n    autoExpandParent: true,\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n\n  onChange = (e) => {\n    const { value } = e.target;\n    const expandedKeys = dataList\n      .map((item) => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n        return null;\n      })\n      .filter((item, i, self) => item && self.indexOf(item) === i);\n    this.setState({\n      expandedKeys,\n      searchValue: value,\n      autoExpandParent: true,\n    });\n  };\n\n  render() {\n    const { searchValue, expandedKeys, autoExpandParent } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n          index > -1 ? (\n            <span>\n              {beforeStr}\n              <span className=\"site-tree-search-value\">{searchValue}</span>\n              {afterStr}\n            </span>\n          ) : (\n            <span>{item.title}</span>\n          );\n        if (item.children) {\n          return { title, key: item.key, children: loop(item.children) };\n        }\n\n        return {\n          title,\n          key: item.key,\n        };\n      });\n    return (\n      <div>\n        <Search\n          style={{ marginBottom: 8 }}\n          placeholder=\"Search\"\n          onChange={this.onChange}\n        />\n        <Tree\n          onExpand={this.onExpand}\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n          treeData={loop(gData)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchTree;\n"]},"metadata":{},"sourceType":"module"}