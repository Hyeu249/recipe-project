{"ast":null,"code":"import zhMessages from \"../locales/zh-Hans.json\";\nconst zh = \"输入新密码并进行确认用户名密码或者点击任意按钮未读电子邮件电子邮件地址查看购物车查看全部我的简历\";\nconst randomNumber = Math.floor(Math.random() * zh.length);\nlet text = \"Hello world!\";\nconsole.log(\"slice text: \", text.slice(0, 3));\nzhMessages[\"sidebar.publisher\"] = \"输入新\";\n\nconst Zhlang = recipeValues => {\n  const uniqueRecipes = recipeValues === null || recipeValues === void 0 ? void 0 : recipeValues.map(recipe => recipe.publisher).filter((value, index, self) => self.indexOf(value) === index).map(_recipe => {\n    const recipe = _recipe.replaceAll(\" \", \"-\").toLowerCase();\n\n    return {\n      key: _recipe,\n      label: `sidebar.${recipe}`\n    };\n  });\n  if (recipeValues) uniqueRecipes.forEach(recipe => {\n    enMessages[recipe === null || recipe === void 0 ? void 0 : recipe.label] = recipe === null || recipe === void 0 ? void 0 : recipe.key;\n  });\n  const ZhLan_data = {\n    messages: { ...zhMessages\n    },\n    antd: null,\n    locale: \"zh-Hans-CN\"\n  };\n  return ZhLan_data;\n};\n\nexport default Zhlang;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/config/translation/entries/zh-Hans-CN.js"],"names":["zhMessages","zh","randomNumber","Math","floor","random","length","text","console","log","slice","Zhlang","recipeValues","uniqueRecipes","map","recipe","publisher","filter","value","index","self","indexOf","_recipe","replaceAll","toLowerCase","key","label","forEach","enMessages","ZhLan_data","messages","antd","locale"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,MAAMC,EAAE,GACN,kDADF;AAGA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,EAAE,CAACK,MAA9B,CAArB;AAEA,IAAIC,IAAI,GAAG,cAAX;AAEAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,CAAd,CAA5B;AAEAV,UAAU,CAAC,mBAAD,CAAV,GAAkC,KAAlC;;AAEA,MAAMW,MAAM,GAAIC,YAAD,IAAkB;AAC/B,QAAMC,aAAa,GAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAC9BE,GADkB,CACbC,MAAD,IAAYA,MAAM,CAACC,SADL,EAEnBC,MAFmB,CAEZ,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAFpC,EAGnBL,GAHmB,CAGdQ,OAAD,IAAa;AAChB,UAAMP,MAAM,GAAGO,OAAO,CAACC,UAAR,CAAmB,GAAnB,EAAwB,GAAxB,EAA6BC,WAA7B,EAAf;;AACA,WAAO;AACLC,MAAAA,GAAG,EAAEH,OADA;AAELI,MAAAA,KAAK,EAAG,WAAUX,MAAO;AAFpB,KAAP;AAID,GATmB,CAAtB;AAWA,MAAIH,YAAJ,EACEC,aAAa,CAACc,OAAd,CAAuBZ,MAAD,IAAY;AAChCa,IAAAA,UAAU,CAACb,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEW,KAAT,CAAV,GAA4BX,MAA5B,aAA4BA,MAA5B,uBAA4BA,MAAM,CAAEU,GAApC;AACD,GAFD;AAIF,QAAMI,UAAU,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EACR,GAAG9B;AADK,KADO;AAIjB+B,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,MAAM,EAAE;AALS,GAAnB;AAQA,SAAOH,UAAP;AACD,CA1BD;;AA4BA,eAAelB,MAAf","sourcesContent":["import zhMessages from \"../locales/zh-Hans.json\";\n\nconst zh =\n  \"输入新密码并进行确认用户名密码或者点击任意按钮未读电子邮件电子邮件地址查看购物车查看全部我的简历\";\n\nconst randomNumber = Math.floor(Math.random() * zh.length);\n\nlet text = \"Hello world!\";\n\nconsole.log(\"slice text: \", text.slice(0, 3));\n\nzhMessages[\"sidebar.publisher\"] = \"输入新\";\n\nconst Zhlang = (recipeValues) => {\n  const uniqueRecipes = recipeValues\n    ?.map((recipe) => recipe.publisher)\n    .filter((value, index, self) => self.indexOf(value) === index)\n    .map((_recipe) => {\n      const recipe = _recipe.replaceAll(\" \", \"-\").toLowerCase();\n      return {\n        key: _recipe,\n        label: `sidebar.${recipe}`,\n      };\n    });\n\n  if (recipeValues)\n    uniqueRecipes.forEach((recipe) => {\n      enMessages[recipe?.label] = recipe?.key;\n    });\n\n  const ZhLan_data = {\n    messages: {\n      ...zhMessages,\n    },\n    antd: null,\n    locale: \"zh-Hans-CN\",\n  };\n\n  return ZhLan_data;\n};\n\nexport default Zhlang;\n"]},"metadata":{},"sourceType":"module"}