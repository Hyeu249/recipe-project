{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/packages/isomorphic-cra/src/containers/Topbar/LanguageSwitcher/LanguageSwitcher.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import IntlMessages from \"@iso/components/utility/intlMessages\";\n\nimport actions from \"@iso/redux/languageSwitcher/actions\";\nimport config from \"./config\";\nconst {\n  changeLanguage\n} = actions;\nexport default function LanguageSwitcher({\n  style\n}) {\n  const {\n    language\n  } = useSelector(state => state.LanguageSwitcher);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"themeSwitchBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...style\n    },\n    className: \"themeSwitchBtnWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, config.options.map(option => {\n    const {\n      languageId,\n      icon\n    } = option; // const customClass =\n    //   languageId === language.languageId\n    //     ? \"selectedTheme languageSwitch\"\n    //     : \"languageSwitch\";\n\n    return (\n      /*#__PURE__*/\n      // <button\n      //   type=\"button\"\n      //   className={customClass}\n      //   key={languageId}\n      //   onClick={() => {\n      //     dispatch(changeLanguage(languageId));\n      //   }}\n      // >\n      React.createElement(\"img\", {\n        src: icon,\n        alt: \"flag\",\n        style: {\n          width: \"50px\",\n          paddingRight: \"10px\",\n          cursor: \"pointer\"\n        },\n        key: languageId,\n        onClick: () => {\n          dispatch(changeLanguage(languageId));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }) // </button>\n\n    );\n  })));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/packages/isomorphic-cra/src/containers/Topbar/LanguageSwitcher/LanguageSwitcher.js"],"names":["React","useDispatch","useSelector","actions","config","changeLanguage","LanguageSwitcher","style","language","state","dispatch","options","map","option","languageId","icon","width","paddingRight","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAqBF,OAA3B;AAEA,eAAe,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAqC;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,gBAAlB,CAAhC;AAEA,QAAMI,QAAQ,GAAGT,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,KAAK,EAAE,EAAE,GAAGM;AAAL,KAAZ;AAA0B,IAAA,SAAS,EAAC,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACO,OAAP,CAAeC,GAAf,CAAoBC,MAAD,IAAY;AAC9B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAuBF,MAA7B,CAD8B,CAE9B;AACA;AACA;AACA;;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAAA,GAAG,EAAEE,IADP;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,YAAY,EAAE,MAFT;AAGLC,UAAAA,MAAM,EAAE;AAHH,SAHT;AAQE,QAAA,GAAG,EAAEJ,UARP;AASE,QAAA,OAAO,EAAE,MAAM;AACbJ,UAAAA,QAAQ,CAACL,cAAc,CAACS,UAAD,CAAf,CAAR;AACD,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAsBE;;AAtBF;AAwBD,GA/BA,CADH,CAJF,CADF;AAyCD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import IntlMessages from \"@iso/components/utility/intlMessages\";\nimport actions from \"@iso/redux/languageSwitcher/actions\";\nimport config from \"./config\";\n\nconst { changeLanguage } = actions;\n\nexport default function LanguageSwitcher({ style }) {\n  const { language } = useSelector((state) => state.LanguageSwitcher);\n\n  const dispatch = useDispatch();\n  return (\n    <div className=\"themeSwitchBlock\">\n      {/* <h4>\n        <IntlMessages id=\"languageSwitcher.label\" />\n      </h4> */}\n      <div style={{ ...style }} className=\"themeSwitchBtnWrapper\">\n        {config.options.map((option) => {\n          const { languageId, icon } = option;\n          // const customClass =\n          //   languageId === language.languageId\n          //     ? \"selectedTheme languageSwitch\"\n          //     : \"languageSwitch\";\n\n          return (\n            // <button\n            //   type=\"button\"\n            //   className={customClass}\n            //   key={languageId}\n            //   onClick={() => {\n            //     dispatch(changeLanguage(languageId));\n            //   }}\n            // >\n            <img\n              src={icon}\n              alt=\"flag\"\n              style={{\n                width: \"50px\",\n                paddingRight: \"10px\",\n                cursor: \"pointer\",\n              }}\n              key={languageId}\n              onClick={() => {\n                dispatch(changeLanguage(languageId));\n              }}\n            />\n            // </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}