{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/Todo/TodoList.js\";\nimport React from \"react\";\nimport Button from \"@iso/components/uielements/button\";\nimport Checkbox from \"@iso/components/uielements/checkbox\";\nimport { RadioButton, RadioGroup } from \"@iso/components/uielements/radio\";\nimport { timeDifference } from \"@iso/lib/helpers/utility\";\nimport { notification, ColorChoser, EditableComponent } from \"@iso/components/\";\nimport { TodoListWrapper } from \"./Todo.styles\";\nimport { CloseOutlined } from \"@ant-design/icons\";\n\nfunction filterTodos(todos, search) {\n  const selectedTodos = search === \"All\" ? todos : todos.filter(todo => todo.completed === (search === \"Completed\"));\n  let completed = 0;\n  console.log(\"selectedTodos: \", selectedTodos);\n  selectedTodos.forEach(todo => {\n    if (todo.completed) {\n      completed += 1;\n    }\n  });\n  return {\n    selectedTodos,\n    completed\n  };\n}\n\nexport default function TodoList(props) {\n  const [search, setSearch] = React.useState(\"All\");\n\n  function singleTodo(todo) {\n    const {\n      deleteTodo,\n      colors\n    } = props;\n\n    const onDelete = () => deleteTodo(todo.id);\n\n    const updateTodo = (key, value) => {\n      todo[key] = value;\n      props.edittodo(todo);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoTodoList\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColorChoser, {\n      colors: colors,\n      changeColor: value => updateTodo(\"color\", value),\n      seectedColor: todo.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"isoTodoCheck\",\n      checked: todo.completed,\n      onChange: () => updateTodo(\"completed\", !todo.completed),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"isoTodoContentWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"isoTodoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, timeDifference(todo.createTime)), /*#__PURE__*/React.createElement(EditableComponent, {\n      value: todo.todo,\n      itemKey: \"todo\",\n      onChange: updateTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"isoTodoDelete\",\n      icon: /*#__PURE__*/React.createElement(CloseOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }),\n      type: \"default\",\n      onClick: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const {\n    selectedTodos,\n    completed\n  } = filterTodos(props.todos, search);\n  return /*#__PURE__*/React.createElement(TodoListWrapper, {\n    className: \"isoTodoContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoStatusTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    value: search,\n    onChange: onChange,\n    className: \"isoTodoStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"Uncompleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Uncompleted\"), /*#__PURE__*/React.createElement(RadioButton, {\n    value: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Completed\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, selectedTodos.length > 0 ? selectedTodos.map(note => singleTodo(note)) : /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"isoNoTodoFound\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"No todo found\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoTodoFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: \"isoTodoCheckAll\",\n    checked: completed === selectedTodos.length,\n    disabled: completed === selectedTodos.length,\n    onChange: () => {\n      notification(\"success\", \"All Todos are Completed!!!\", \"\");\n      props.allCompleted();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Mark all as completed\"), selectedTodos.length > 0 && completed === selectedTodos.length ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"isoDeleteAll\",\n    onClick: () => {\n      notification(\"success\", \"All Completed Todos are Deleted\", \"\");\n      props.deleteCompleted();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, `Delete Completed (${completed})`) : \"\"));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/Todo/TodoList.js"],"names":["React","Button","Checkbox","RadioButton","RadioGroup","timeDifference","notification","ColorChoser","EditableComponent","TodoListWrapper","CloseOutlined","filterTodos","todos","search","selectedTodos","filter","todo","completed","console","log","forEach","TodoList","props","setSearch","useState","singleTodo","deleteTodo","colors","onDelete","id","updateTodo","key","value","edittodo","color","createTime","onChange","event","target","length","map","note","allCompleted","deleteCompleted"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@iso/components/uielements/button\";\nimport Checkbox from \"@iso/components/uielements/checkbox\";\nimport { RadioButton, RadioGroup } from \"@iso/components/uielements/radio\";\nimport { timeDifference } from \"@iso/lib/helpers/utility\";\nimport { notification, ColorChoser, EditableComponent } from \"@iso/components/\";\nimport { TodoListWrapper } from \"./Todo.styles\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nfunction filterTodos(todos, search) {\n  const selectedTodos =\n    search === \"All\"\n      ? todos\n      : todos.filter((todo) => todo.completed === (search === \"Completed\"));\n  let completed = 0;\n\n  console.log(\"selectedTodos: \", selectedTodos);\n  selectedTodos.forEach((todo) => {\n    if (todo.completed) {\n      completed += 1;\n    }\n  });\n  return { selectedTodos, completed };\n}\nexport default function TodoList(props) {\n  const [search, setSearch] = React.useState(\"All\");\n\n  function singleTodo(todo) {\n    const { deleteTodo, colors } = props;\n    const onDelete = () => deleteTodo(todo.id);\n    const updateTodo = (key, value) => {\n      todo[key] = value;\n      props.edittodo(todo);\n    };\n    return (\n      <div className=\"isoTodoList\" key={todo.id}>\n        <ColorChoser\n          colors={colors}\n          changeColor={(value) => updateTodo(\"color\", value)}\n          seectedColor={todo.color}\n        />\n        <Checkbox\n          className=\"isoTodoCheck\"\n          checked={todo.completed}\n          onChange={() => updateTodo(\"completed\", !todo.completed)}\n        />\n        <div className=\"isoTodoContentWrapper\">\n          <span className=\"isoTodoDate\">{timeDifference(todo.createTime)}</span>\n          <EditableComponent\n            value={todo.todo}\n            itemKey=\"todo\"\n            onChange={updateTodo}\n          />\n        </div>\n        <Button\n          className=\"isoTodoDelete\"\n          icon={<CloseOutlined />}\n          type=\"default\"\n          onClick={onDelete}\n        />\n      </div>\n    );\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const { selectedTodos, completed } = filterTodos(props.todos, search);\n\n  return (\n    <TodoListWrapper className=\"isoTodoContent\">\n      <div className=\"isoTodoStatusTab\">\n        <RadioGroup\n          value={search}\n          onChange={onChange}\n          className=\"isoTodoStatus\"\n        >\n          <RadioButton value=\"All\">All</RadioButton>\n          <RadioButton value=\"Uncompleted\">Uncompleted</RadioButton>\n          <RadioButton value=\"Completed\">Completed</RadioButton>\n        </RadioGroup>\n      </div>\n\n      <div className=\"isoTodoListWrapper\">\n        {selectedTodos.length > 0 ? (\n          selectedTodos.map((note) => singleTodo(note))\n        ) : (\n          <h3 className=\"isoNoTodoFound\">No todo found</h3>\n        )}\n      </div>\n\n      <div className=\"isoTodoFooter\">\n        <Checkbox\n          className=\"isoTodoCheckAll\"\n          checked={completed === selectedTodos.length}\n          disabled={completed === selectedTodos.length}\n          onChange={() => {\n            notification(\"success\", \"All Todos are Completed!!!\", \"\");\n            props.allCompleted();\n          }}\n        >\n          Mark all as completed\n        </Checkbox>\n\n        {selectedTodos.length > 0 && completed === selectedTodos.length ? (\n          <Button\n            type=\"button\"\n            className=\"isoDeleteAll\"\n            onClick={() => {\n              notification(\"success\", \"All Completed Todos are Deleted\", \"\");\n              props.deleteCompleted();\n            }}\n          >\n            {`Delete Completed (${completed})`}\n          </Button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </TodoListWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}