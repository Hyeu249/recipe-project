{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/Mail/DesktopView.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { InputSearch } from \"@iso/components/uielements/input\";\nimport mailList from \"@iso/components/Mail/MailList\";\nimport mailBuckets from \"@iso/components/Mail/MailBuckets\";\nimport mailTags from \"@iso/components/Mail/MailTags\";\nimport singleMail from \"@iso/components/Mail/SingleMail\";\nimport ComposeBtn from \"@iso/components/Mail/MailComposeBtn\";\nimport ComposeMail from \"@iso/components/Mail/ComposeMail\";\nimport PaginationControl from \"@iso/components/Mail/MailPagination\";\nimport mailActions from \"@iso/redux/mail/actions\";\nimport mailSelector from \"@iso/redux/mail/selector\";\nimport MailBox from \"./Mail.styles\";\nconst {\n  filterAction,\n  selectMail,\n  changeComposeMail,\n  changeReplyMail,\n  changeSearchString\n} = mailActions; // -----> redux actions\n\nexport default function DesktopView(props) {\n  const dispatch = useDispatch();\n  const mail = useSelector(state => state.Mails); // -----> selecting global mails state\n\n  const filterMails = mailSelector(mail); // -----> shortcut selecting\n\n  const {\n    allMails,\n    selectedMail,\n    filterAttr,\n    composeMail,\n    replyMail,\n    searchString\n  } = mail; // -----> destructuring state object(mail)\n\n  const [search, setSearch] = React.useState(searchString); // -----> set state searhing email\n\n  const handleSelectMail = React.useCallback(value => dispatch(selectMail(value)), // -----> dispatch\n  [dispatch]);\n  const handleChangeReplyMail = React.useCallback(value => dispatch(changeReplyMail(value)), // -----> dispatch\n  [dispatch]);\n  const handleFilterAction = React.useCallback(value => dispatch(filterAction(value)), // -----> dispatch\n  [dispatch]);\n  let singleMailComponent =\n  /*#__PURE__*/\n  // -----> default mail content component to render\n  React.createElement(\"p\", {\n    className: \"isoNoMailMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"my nigga\");\n  console.log(selectedMail);\n  const index = allMails.findIndex(mail => mail.id === selectedMail); // -----> index of the email is selected\n\n  if (index !== -1) {\n    // -----> selected mail component to render\n    singleMailComponent = singleMail(allMails, filterMails, index, replyMail, handleChangeReplyMail, handleSelectMail);\n  }\n\n  return /*#__PURE__*/React.createElement(MailBox, {\n    className: \"isomorphicMailBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoLeftWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComposeBtn, {\n    changeComposeMail: value => dispatch(changeComposeMail(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoMailOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: props.height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, mailBuckets(allMails, handleFilterAction, filterAttr), mailTags(allMails, handleFilterAction, filterAttr)))), composeMail ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoMiddleWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoBucketLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, filterAttr.bucket), /*#__PURE__*/React.createElement(PaginationControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSearchMailWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputSearch, {\n    placeholder: \"Search Email\",\n    value: search,\n    className: \"isoSearchEmail\",\n    onChange: event => setSearch(event.target.value),\n    onSearch: value => dispatch(changeSearchString(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, mailList(filterMails, handleSelectMail, selectedMail))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSingleMailWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      height: props.height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, composeMail ? /*#__PURE__*/React.createElement(ComposeMail, {\n    allMails: allMails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }) : singleMailComponent)));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/Mail/DesktopView.js"],"names":["React","useSelector","useDispatch","Scrollbars","IntlMessages","InputSearch","mailList","mailBuckets","mailTags","singleMail","ComposeBtn","ComposeMail","PaginationControl","mailActions","mailSelector","MailBox","filterAction","selectMail","changeComposeMail","changeReplyMail","changeSearchString","DesktopView","props","dispatch","mail","state","Mails","filterMails","allMails","selectedMail","filterAttr","composeMail","replyMail","searchString","search","setSearch","useState","handleSelectMail","useCallback","value","handleChangeReplyMail","handleFilterAction","singleMailComponent","console","log","index","findIndex","id","height","bucket","event","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\n\nimport { InputSearch } from \"@iso/components/uielements/input\";\n\nimport mailList from \"@iso/components/Mail/MailList\";\nimport mailBuckets from \"@iso/components/Mail/MailBuckets\";\nimport mailTags from \"@iso/components/Mail/MailTags\";\nimport singleMail from \"@iso/components/Mail/SingleMail\";\nimport ComposeBtn from \"@iso/components/Mail/MailComposeBtn\";\nimport ComposeMail from \"@iso/components/Mail/ComposeMail\";\nimport PaginationControl from \"@iso/components/Mail/MailPagination\";\n\nimport mailActions from \"@iso/redux/mail/actions\";\nimport mailSelector from \"@iso/redux/mail/selector\";\nimport MailBox from \"./Mail.styles\";\n\nconst {\n  filterAction,\n  selectMail,\n  changeComposeMail,\n  changeReplyMail,\n  changeSearchString,\n} = mailActions; // -----> redux actions\n\nexport default function DesktopView(props) {\n  const dispatch = useDispatch();\n  const mail = useSelector((state) => state.Mails); // -----> selecting global mails state\n  const filterMails = mailSelector(mail); // -----> shortcut selecting\n\n  const {\n    allMails,\n    selectedMail,\n    filterAttr,\n    composeMail,\n    replyMail,\n    searchString,\n  } = mail; // -----> destructuring state object(mail)\n\n  const [search, setSearch] = React.useState(searchString); // -----> set state searhing email\n\n  const handleSelectMail = React.useCallback(\n    (value) => dispatch(selectMail(value)), // -----> dispatch\n    [dispatch]\n  );\n\n  const handleChangeReplyMail = React.useCallback(\n    (value) => dispatch(changeReplyMail(value)), // -----> dispatch\n    [dispatch]\n  );\n\n  const handleFilterAction = React.useCallback(\n    (value) => dispatch(filterAction(value)), // -----> dispatch\n    [dispatch]\n  );\n\n  let singleMailComponent = ( // -----> default mail content component to render\n    <p className=\"isoNoMailMsg\">\n      {/* <IntlMessages id=\"email.noMessage\" /> */}\n      my nigga\n    </p>\n  );\n  console.log(selectedMail);\n  const index = allMails.findIndex((mail) => mail.id === selectedMail); // -----> index of the email is selected\n  if (index !== -1) {\n    // -----> selected mail component to render\n    singleMailComponent = singleMail(\n      allMails,\n      filterMails,\n      index,\n      replyMail,\n      handleChangeReplyMail,\n      handleSelectMail\n    );\n  }\n  return (\n    <MailBox className=\"isomorphicMailBox\">\n      {/*                     Left                     */}\n      <div className=\"isoLeftWrapper\">\n        <ComposeBtn\n          changeComposeMail={(value) => dispatch(changeComposeMail(value))}\n        />\n        <div className=\"isoMailOptions\">\n          <Scrollbars style={{ height: props.height - 70 }}>\n            {mailBuckets(allMails, handleFilterAction, filterAttr)}\n            {mailTags(allMails, handleFilterAction, filterAttr)}\n          </Scrollbars>\n        </div>\n      </div>\n      {/*                     Right                     */}\n      {composeMail ? null : (\n        <div className=\"isoMiddleWrapper\">\n          <div className=\"isoBucketLabel\">\n            <h3>{filterAttr.bucket}</h3>\n            <PaginationControl />\n          </div>\n          <div className=\"isoSearchMailWrapper\">\n            <InputSearch\n              placeholder=\"Search Email\"\n              value={search}\n              className=\"isoSearchEmail\"\n              onChange={(event) => setSearch(event.target.value)}\n              onSearch={(value) => dispatch(changeSearchString(value))}\n            />\n          </div>\n          <Scrollbars>\n            {mailList(filterMails, handleSelectMail, selectedMail)}\n          </Scrollbars>\n        </div>\n      )}\n      {/*                                           */}\n      <div className=\"isoSingleMailWrapper\">\n        <Scrollbars style={{ height: props.height - 70 }}>\n          {composeMail ? (\n            <ComposeMail allMails={allMails} />\n          ) : (\n            singleMailComponent\n          )}\n        </Scrollbars>\n      </div>\n    </MailBox>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}