{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/packages/isomorphic-cra/src/containers/Topbar/Topbar.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport appActions from \"@iso/redux/app/actions\";\nimport TopbarNotification from \"./TopbarNotification\";\nimport TopbarMessage from \"./TopbarMessage\";\nimport TopbarSearch from \"./TopbarSearch\";\nimport TopbarUser from \"./TopbarUser\";\nimport TopbarAddtoCart from \"./TopbarAddToCart\";\nimport TopbarWrapper from \"./Topbar.styles\";\nimport { TopbarMenuIcon } from \"@iso/config/icon.config\";\nimport LanguageSwitcher from \"./LanguageSwitcher/LanguageSwitcher\";\nconst {\n  Header\n} = _Layout;\nconst {\n  toggleCollapsed\n} = appActions;\nexport default function Topbar() {\n  const [selectedItem, setSelectedItem] = React.useState(\"\");\n  const customizedTheme = useSelector(state => state.ThemeSwitcher.topbarTheme);\n  const {\n    collapsed,\n    openDrawer\n  } = useSelector(state => state.App);\n  const dispatch = useDispatch();\n  const handleToggle = React.useCallback(() => dispatch(toggleCollapsed()), [dispatch]);\n  const isCollapsed = collapsed && !openDrawer;\n  const styling = {\n    background: customizedTheme.backgroundColor,\n    position: \"fixed\",\n    width: \"100%\",\n    height: 70\n  };\n  return /*#__PURE__*/React.createElement(TopbarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    style: styling,\n    className: isCollapsed ? \"isomorphicTopbar collapsed\" : \"isomorphicTopbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: isCollapsed ? \"triggerBtn menuCollapsed\" : \"triggerBtn menuOpen\",\n    style: {\n      color: customizedTheme.textColor\n    },\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopbarMenuIcon, {\n    size: 24,\n    color: customizedTheme.textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(LanguageSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"NAMING_SIBAR\",\n      menuItemSibar: {\n        key: \"recipes\",\n        label: \"sidebar.recipes\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"button\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"isoRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSelectedItem(\"notification\"),\n    className: selectedItem ? \"isoNotify active\" : \"isoNotify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopbarNotification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSelectedItem(\"message\"),\n    className: \"isoMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopbarMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSelectedItem(\"addToCart\"),\n    className: \"isoCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopbarAddtoCart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSelectedItem(\"user\"),\n    className: \"isoUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopbarUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/packages/isomorphic-cra/src/containers/Topbar/Topbar.js"],"names":["React","useSelector","useDispatch","appActions","TopbarNotification","TopbarMessage","TopbarSearch","TopbarUser","TopbarAddtoCart","TopbarWrapper","TopbarMenuIcon","LanguageSwitcher","Header","toggleCollapsed","Topbar","selectedItem","setSelectedItem","useState","customizedTheme","state","ThemeSwitcher","topbarTheme","collapsed","openDrawer","App","dispatch","handleToggle","useCallback","isCollapsed","styling","background","backgroundColor","position","width","height","color","textColor","type","menuItemSibar","key","label"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport appActions from \"@iso/redux/app/actions\";\nimport TopbarNotification from \"./TopbarNotification\";\nimport TopbarMessage from \"./TopbarMessage\";\nimport TopbarSearch from \"./TopbarSearch\";\nimport TopbarUser from \"./TopbarUser\";\nimport TopbarAddtoCart from \"./TopbarAddToCart\";\nimport TopbarWrapper from \"./Topbar.styles\";\nimport { TopbarMenuIcon } from \"@iso/config/icon.config\";\n\nimport LanguageSwitcher from \"./LanguageSwitcher/LanguageSwitcher\";\n\nconst { Header } = Layout;\nconst { toggleCollapsed } = appActions;\n\nexport default function Topbar() {\n  const [selectedItem, setSelectedItem] = React.useState(\"\");\n  const customizedTheme = useSelector(\n    (state) => state.ThemeSwitcher.topbarTheme\n  );\n\n  const { collapsed, openDrawer } = useSelector((state) => state.App);\n  const dispatch = useDispatch();\n  const handleToggle = React.useCallback(\n    () => dispatch(toggleCollapsed()),\n    [dispatch]\n  );\n\n  const isCollapsed = collapsed && !openDrawer;\n  const styling = {\n    background: customizedTheme.backgroundColor,\n    position: \"fixed\",\n    width: \"100%\",\n    height: 70,\n  };\n\n  return (\n    <TopbarWrapper>\n      <Header\n        style={styling}\n        className={\n          isCollapsed ? \"isomorphicTopbar collapsed\" : \"isomorphicTopbar\"\n        }\n      >\n        <div className=\"isoLeft\">\n          <button\n            className={\n              isCollapsed ? \"triggerBtn menuCollapsed\" : \"triggerBtn menuOpen\"\n            }\n            style={{ color: customizedTheme.textColor }}\n            onClick={handleToggle}\n          >\n            <TopbarMenuIcon size={24} color={customizedTheme.textColor} />\n          </button>\n        </div>\n\n        <LanguageSwitcher />\n        <button\n          onClick={() =>\n            dispatch({\n              type: \"NAMING_SIBAR\",\n              menuItemSibar: { key: \"recipes\", label: \"sidebar.recipes\" },\n            })\n          }\n        >\n          button\n        </button>\n\n        <ul className=\"isoRight\">\n          {/* <li className=\"isoSearch\">\n            <TopbarSearch />\n          </li> */}\n\n          <li\n            onClick={() => setSelectedItem(\"notification\")}\n            className={selectedItem ? \"isoNotify active\" : \"isoNotify\"}\n          >\n            <TopbarNotification />\n          </li>\n\n          <li onClick={() => setSelectedItem(\"message\")} className=\"isoMsg\">\n            <TopbarMessage />\n          </li>\n          <li onClick={() => setSelectedItem(\"addToCart\")} className=\"isoCart\">\n            <TopbarAddtoCart />\n          </li>\n\n          <li onClick={() => setSelectedItem(\"user\")} className=\"isoUser\">\n            <TopbarUser />\n          </li>\n        </ul>\n      </Header>\n    </TopbarWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}