{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/components/Invoice/InvoiceTable.js\";\nimport React from \"react\";\nimport Input from \"../uielements/input\";\nimport Button from \"../uielements/button\";\nimport { stringToPosetiveInt } from \"@iso/lib/helpers/utility\";\nimport Table from \"./TableStyle\";\nconsole.log(\"add invoice\");\nconst viewColumns = [{\n  title: \"#\",\n  dataIndex: \"key\",\n  width: \"10%\",\n  rowKey: \"key\"\n}, {\n  title: \"Item Name\",\n  dataIndex: \"itemName\",\n  width: \"40%\",\n  rowKey: \"itemName\"\n}, {\n  title: \"Unit Costs\",\n  dataIndex: \"costs\",\n  width: \"15%\",\n  rowKey: \"costs\"\n}, {\n  title: \"Unit\",\n  dataIndex: \"qty\",\n  width: \"15%\",\n  rowKey: \"qty\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  width: \"20%\",\n  rowKey: \"price\"\n}];\n\nconst ViewTable = ({\n  invoiceList\n}) => /*#__PURE__*/React.createElement(Table, {\n  columns: viewColumns,\n  dataSource: invoiceList,\n  pagination: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n});\n\nconst EditTable = ({\n  editableInvoice,\n  editInvoice,\n  updateValues\n}) => {\n  const {\n    invoiceList\n  } = editableInvoice;\n  const editColumns = [{\n    title: \"#\",\n    dataIndex: \"key\",\n    rowKey: \"key\",\n    width: \"10%\",\n    render: (text, singleInvoice) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 40\n      }\n    }, singleInvoice.key)\n  }, {\n    title: \"Item Name\",\n    dataIndex: \"itemName\",\n    rowKey: \"itemName\",\n    width: \"40%\",\n    render: (text, singleInvoice) => /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Item Name\",\n      value: singleInvoice.itemName,\n      onChange: event => {\n        editableInvoice.invoiceList[singleInvoice.key - 1].itemName = event.target.value;\n        editInvoice(editableInvoice);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    })\n  }, {\n    title: \"Unit Costs\",\n    dataIndex: \"costs\",\n    rowKey: \"costs\",\n    width: \"20%\",\n    render: (text, singleInvoice) => /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Unit Cost\",\n      value: singleInvoice.costs,\n      onChange: event => {\n        editableInvoice.invoiceList[singleInvoice.key - 1].costs = stringToPosetiveInt(event.target.value, singleInvoice.costs);\n        editInvoice(updateValues(editableInvoice));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    })\n  }, {\n    title: \"Unit\",\n    dataIndex: \"qty\",\n    rowKey: \"qty\",\n    width: \"10%\",\n    render: (text, singleInvoice) => /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Units\",\n      value: singleInvoice.qty,\n      onChange: event => {\n        editableInvoice.invoiceList[singleInvoice.key - 1].qty = stringToPosetiveInt(event.target.value, singleInvoice.qty);\n        editInvoice(updateValues(editableInvoice));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    })\n  }, {\n    title: \"Price\",\n    dataIndex: \"price\",\n    rowKey: \"price\",\n    width: \"10%\"\n  }, {\n    title: \"\",\n    dataIndex: \"delete\",\n    rowKey: \"delete\",\n    width: \"10%\",\n    render: (text, singleInvoice) => invoiceList.length === 1 ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        const newInvoiceList = [];\n        invoiceList.forEach((invoice, i) => {\n          if (i !== singleInvoice.key - 1) {\n            newInvoiceList.push(invoice);\n          }\n        });\n        editableInvoice.invoiceList = newInvoiceList;\n        editInvoice(updateValues(editableInvoice));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Delete\")\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: editColumns,\n    dataSource: invoiceList,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { ViewTable, EditTable };","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/components/Invoice/InvoiceTable.js"],"names":["React","Input","Button","stringToPosetiveInt","Table","console","log","viewColumns","title","dataIndex","width","rowKey","ViewTable","invoiceList","EditTable","editableInvoice","editInvoice","updateValues","editColumns","render","text","singleInvoice","key","itemName","event","target","value","costs","qty","length","newInvoiceList","forEach","invoice","i","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Input from \"../uielements/input\";\nimport Button from \"../uielements/button\";\nimport { stringToPosetiveInt } from \"@iso/lib/helpers/utility\";\nimport Table from \"./TableStyle\";\n\nconsole.log(\"add invoice\");\nconst viewColumns = [\n  {\n    title: \"#\",\n    dataIndex: \"key\",\n    width: \"10%\",\n    rowKey: \"key\",\n  },\n  {\n    title: \"Item Name\",\n    dataIndex: \"itemName\",\n    width: \"40%\",\n    rowKey: \"itemName\",\n  },\n  {\n    title: \"Unit Costs\",\n    dataIndex: \"costs\",\n    width: \"15%\",\n    rowKey: \"costs\",\n  },\n  {\n    title: \"Unit\",\n    dataIndex: \"qty\",\n    width: \"15%\",\n    rowKey: \"qty\",\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    width: \"20%\",\n    rowKey: \"price\",\n  },\n];\n\nconst ViewTable = ({ invoiceList }) => (\n  <Table columns={viewColumns} dataSource={invoiceList} pagination={false} />\n);\n\nconst EditTable = ({ editableInvoice, editInvoice, updateValues }) => {\n  const { invoiceList } = editableInvoice;\n  const editColumns = [\n    {\n      title: \"#\",\n      dataIndex: \"key\",\n      rowKey: \"key\",\n      width: \"10%\",\n      render: (text, singleInvoice) => <span>{singleInvoice.key}</span>,\n    },\n    {\n      title: \"Item Name\",\n      dataIndex: \"itemName\",\n      rowKey: \"itemName\",\n      width: \"40%\",\n      render: (text, singleInvoice) => (\n        <Input\n          placeholder=\"Item Name\"\n          value={singleInvoice.itemName}\n          onChange={(event) => {\n            editableInvoice.invoiceList[singleInvoice.key - 1].itemName =\n              event.target.value;\n            editInvoice(editableInvoice);\n          }}\n        />\n      ),\n    },\n    {\n      title: \"Unit Costs\",\n      dataIndex: \"costs\",\n      rowKey: \"costs\",\n      width: \"20%\",\n      render: (text, singleInvoice) => (\n        <Input\n          placeholder=\"Unit Cost\"\n          value={singleInvoice.costs}\n          onChange={(event) => {\n            editableInvoice.invoiceList[singleInvoice.key - 1].costs =\n              stringToPosetiveInt(event.target.value, singleInvoice.costs);\n            editInvoice(updateValues(editableInvoice));\n          }}\n        />\n      ),\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"qty\",\n      rowKey: \"qty\",\n      width: \"10%\",\n      render: (text, singleInvoice) => (\n        <Input\n          placeholder=\"Units\"\n          value={singleInvoice.qty}\n          onChange={(event) => {\n            editableInvoice.invoiceList[singleInvoice.key - 1].qty =\n              stringToPosetiveInt(event.target.value, singleInvoice.qty);\n            editInvoice(updateValues(editableInvoice));\n          }}\n        />\n      ),\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      rowKey: \"price\",\n      width: \"10%\",\n    },\n    {\n      title: \"\",\n      dataIndex: \"delete\",\n      rowKey: \"delete\",\n      width: \"10%\",\n      render: (text, singleInvoice) =>\n        invoiceList.length === 1 ? (\n          \"\"\n        ) : (\n          <Button\n            onClick={() => {\n              const newInvoiceList = [];\n              invoiceList.forEach((invoice, i) => {\n                if (i !== singleInvoice.key - 1) {\n                  newInvoiceList.push(invoice);\n                }\n              });\n              editableInvoice.invoiceList = newInvoiceList;\n              editInvoice(updateValues(editableInvoice));\n            }}\n          >\n            Delete\n          </Button>\n        ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        columns={editColumns}\n        dataSource={invoiceList}\n        pagination={false}\n      />\n    </div>\n  );\n};\nexport { ViewTable, EditTable };\n"]},"metadata":{},"sourceType":"module"}