{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/Ecommerce/Card/Card.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clone from \"clone\";\nimport Button from \"@iso/components/uielements/button\";\nimport PageHeader from \"@iso/components/utility/pageHeader\";\nimport Box from \"@iso/components/utility/box\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport Card from \"@iso/components/Card/Card\";\nimport { ButtonWrapper } from \"@iso/components/Card/CardModal.style\";\nimport basicStyle from \"@iso/assets/styles/constants\";\nimport cardActions from \"@iso/redux/card/actions\";\nimport { createColumns } from \"./config\";\nimport SimpleTable from \"../../Tables/AntTables/TableViews/SimpleView\";\nconst {\n  addCard,\n  editCard,\n  deleteCard\n} = cardActions;\nexport default function Cards() {\n  const dispatch = useDispatch();\n  const {\n    cards\n  } = useSelector(state => state.Cards);\n  const [state, setState] = React.useState({\n    editView: true,\n    // selectedCard: null,\n    modalType: \"\"\n  });\n  const columns = createColumns(editColumn, value => dispatch(deleteCard(value)));\n\n  function editColumn(card) {\n    setState({\n      editView: true,\n      selectedCard: clone(card),\n      modalType: \"edit\"\n    });\n  }\n\n  function addColumn() {\n    setState({\n      editView: true,\n      selectedCard: {\n        id: new Date().getTime(),\n        key: new Date().getTime(),\n        number: \"\",\n        name: \"\",\n        expiry: \"\",\n        cvc: \"\"\n      },\n      modalType: \"add\"\n    });\n  }\n\n  function handleCancel() {\n    setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n\n  function submitCard(card) {\n    if (state.modalType === \"edit\") {\n      dispatch(editCard(state.selectedCard));\n    } else {\n      dispatch(addCard(state.selectedCard));\n    }\n\n    setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n\n  function updateCard(selectedCard) {\n    setState({ ...state,\n      selectedCard\n    });\n  }\n\n  const {\n    rowStyle,\n    colStyle,\n    gutter\n  } = basicStyle;\n  const {\n    editView,\n    selectedCard,\n    modalType\n  } = state;\n  const newCards = clone(cards);\n\n  const createNumber = number => {\n    const length = number.length;\n    let newNumber = \"\";\n\n    for (let i = 0; i < length - 4; i++) {\n      newNumber = `*${newNumber}`;\n    }\n\n    for (let i = length - 4; i < length; i++) {\n      newNumber = `${newNumber}${number.charAt(i)}`;\n    }\n\n    return newNumber;\n  };\n\n  newCards.forEach((card, index) => {\n    newCards[index].number = createNumber(card.number);\n  });\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Cards\"), /*#__PURE__*/React.createElement(_Row, {\n    style: rowStyle,\n    gutter: gutter,\n    justify: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 24,\n    sm: 24,\n    xs: 24,\n    style: colStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWrapper, {\n    className: \"isoButtonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"\",\n    onClick: addColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Add New Card\")), /*#__PURE__*/React.createElement(SimpleTable, {\n    columns: columns,\n    dataSource: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), selectedCard && /*#__PURE__*/React.createElement(Card, {\n    editView: editView,\n    modalType: modalType,\n    selectedCard: selectedCard,\n    handleCancel: handleCancel,\n    submitCard: submitCard,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/Ecommerce/Card/Card.js"],"names":["React","useDispatch","useSelector","clone","Button","PageHeader","Box","LayoutWrapper","Card","ButtonWrapper","basicStyle","cardActions","createColumns","SimpleTable","addCard","editCard","deleteCard","Cards","dispatch","cards","state","setState","useState","editView","modalType","columns","editColumn","value","card","selectedCard","addColumn","id","Date","getTime","key","number","name","expiry","cvc","handleCancel","submitCard","updateCard","rowStyle","colStyle","gutter","newCards","createNumber","length","newNumber","i","charAt","forEach","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport clone from \"clone\";\nimport Button from \"@iso/components/uielements/button\";\nimport PageHeader from \"@iso/components/utility/pageHeader\";\nimport Box from \"@iso/components/utility/box\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport Card from \"@iso/components/Card/Card\";\nimport { ButtonWrapper } from \"@iso/components/Card/CardModal.style\";\nimport basicStyle from \"@iso/assets/styles/constants\";\nimport cardActions from \"@iso/redux/card/actions\";\nimport { createColumns } from \"./config\";\nimport SimpleTable from \"../../Tables/AntTables/TableViews/SimpleView\";\n\nconst { addCard, editCard, deleteCard } = cardActions;\n\nexport default function Cards() {\n  const dispatch = useDispatch();\n  const { cards } = useSelector((state) => state.Cards);\n  const [state, setState] = React.useState({\n    editView: true,\n\n    // selectedCard: null,\n    modalType: \"\",\n  });\n  const columns = createColumns(editColumn, (value) =>\n    dispatch(deleteCard(value))\n  );\n  function editColumn(card) {\n    setState({\n      editView: true,\n      selectedCard: clone(card),\n      modalType: \"edit\",\n    });\n  }\n  function addColumn() {\n    setState({\n      editView: true,\n      selectedCard: {\n        id: new Date().getTime(),\n        key: new Date().getTime(),\n        number: \"\",\n        name: \"\",\n        expiry: \"\",\n        cvc: \"\",\n      },\n      modalType: \"add\",\n    });\n  }\n  function handleCancel() {\n    setState({\n      editView: false,\n      selectedCard: null,\n    });\n  }\n  function submitCard(card) {\n    if (state.modalType === \"edit\") {\n      dispatch(editCard(state.selectedCard));\n    } else {\n      dispatch(addCard(state.selectedCard));\n    }\n    setState({\n      editView: false,\n      selectedCard: null,\n    });\n  }\n  function updateCard(selectedCard) {\n    setState({ ...state, selectedCard });\n  }\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const { editView, selectedCard, modalType } = state;\n  const newCards = clone(cards);\n  const createNumber = (number) => {\n    const length = number.length;\n    let newNumber = \"\";\n    for (let i = 0; i < length - 4; i++) {\n      newNumber = `*${newNumber}`;\n    }\n    for (let i = length - 4; i < length; i++) {\n      newNumber = `${newNumber}${number.charAt(i)}`;\n    }\n    return newNumber;\n  };\n  newCards.forEach((card, index) => {\n    newCards[index].number = createNumber(card.number);\n  });\n  return (\n    <LayoutWrapper>\n      <PageHeader>Cards</PageHeader>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          <Box>\n            <ButtonWrapper className=\"isoButtonWrapper\">\n              <Button type=\"primary\" className=\"\" onClick={addColumn}>\n                Add New Card\n              </Button>\n            </ButtonWrapper>\n\n            <SimpleTable columns={columns} dataSource={cards} />\n            {selectedCard && (\n              <Card\n                editView={editView}\n                modalType={modalType}\n                selectedCard={selectedCard}\n                handleCancel={handleCancel}\n                submitCard={submitCard}\n                updateCard={updateCard}\n              />\n            )}\n          </Box>\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}