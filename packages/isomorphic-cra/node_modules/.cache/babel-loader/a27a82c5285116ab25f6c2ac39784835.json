{"ast":null,"code":"import \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/Todo/Todo.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from \"@iso/components/uielements/input\";\nimport todoAction from \"@iso/redux/todos/actions\";\nimport TodoList from \"./TodoList\";\nimport { TodoWrapper } from \"./Todo.styles\";\nconst {\n  addTodo,\n  edittodo,\n  deleteTodo,\n  allCompleted,\n  deleteCompleted\n} = todoAction;\nconst {\n  Header,\n  Content\n} = _Layout;\nexport default function ToDo() {\n  const [newTodo, setNewTodo] = React.useState(\"\");\n  const {\n    todos,\n    colors\n  } = useSelector(state => state.Todos);\n  console.log(colors);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(_Layout, {\n    style: {\n      background: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoWrapper, {\n    className: \"isomorphicTodoComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"isoTodoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Type here for add a new todo\",\n    value: newTodo,\n    className: \"isoTodoInput\",\n    onChange: event => setNewTodo(event.target.value),\n    onPressEnter: event => {\n      setNewTodo(\"\");\n      dispatch(addTodo(event.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    className: \"isoTodoContentBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    edittodo: todo => dispatch(edittodo(todo)),\n    colors: colors,\n    allCompleted: () => dispatch(allCompleted()),\n    deleteCompleted: () => dispatch(deleteCompleted()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/Todo/Todo.js"],"names":["React","useDispatch","useSelector","Input","todoAction","TodoList","TodoWrapper","addTodo","edittodo","deleteTodo","allCompleted","deleteCompleted","Header","Content","ToDo","newTodo","setNewTodo","useState","todos","colors","state","Todos","console","log","dispatch","background","event","target","value","id","todo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,UAArB;AAAiCC,EAAAA,YAAjC;AAA+CC,EAAAA;AAA/C,IACJP,UADF;AAEA,MAAM;AAAEQ,EAAAA,MAAF;AAAUC,EAAAA;AAAV,WAAN;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,QAAMK,QAAQ,GAAGvB,WAAW,EAA5B;AAEA,sBACE;AAAQ,IAAA,KAAK,EAAE;AAAEwB,MAAAA,UAAU,EAAE;AAAd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,yBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAE,8BADf;AAEE,IAAA,KAAK,EAAEV,OAFT;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,QAAQ,EAAGW,KAAD,IAAWV,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJjC;AAKE,IAAA,YAAY,EAAGF,KAAD,IAAW;AACvBV,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAQ,MAAAA,QAAQ,CAACjB,OAAO,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEV,KADT;AAEE,IAAA,UAAU,EAAGW,EAAD,IAAQL,QAAQ,CAACf,UAAU,CAACoB,EAAD,CAAX,CAF9B;AAGE,IAAA,QAAQ,EAAGC,IAAD,IAAUN,QAAQ,CAAChB,QAAQ,CAACsB,IAAD,CAAT,CAH9B;AAIE,IAAA,MAAM,EAAEX,MAJV;AAKE,IAAA,YAAY,EAAE,MAAMK,QAAQ,CAACd,YAAY,EAAb,CAL9B;AAME,IAAA,eAAe,EAAE,MAAMc,QAAQ,CAACb,eAAe,EAAhB,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF,CADF;AA4BD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport Input from \"@iso/components/uielements/input\";\nimport todoAction from \"@iso/redux/todos/actions\";\nimport TodoList from \"./TodoList\";\nimport { TodoWrapper } from \"./Todo.styles\";\n\nconst { addTodo, edittodo, deleteTodo, allCompleted, deleteCompleted } =\n  todoAction;\nconst { Header, Content } = Layout;\n\nexport default function ToDo() {\n  const [newTodo, setNewTodo] = React.useState(\"\");\n  const { todos, colors } = useSelector((state) => state.Todos);\n  console.log(colors);\n  const dispatch = useDispatch();\n\n  return (\n    <Layout style={{ background: \"none\" }}>\n      <TodoWrapper className=\"isomorphicTodoComponent\">\n        <Header className=\"isoTodoHeader\">\n          <Input\n            placeholder={\"Type here for add a new todo\"}\n            value={newTodo}\n            className=\"isoTodoInput\"\n            onChange={(event) => setNewTodo(event.target.value)}\n            onPressEnter={(event) => {\n              setNewTodo(\"\");\n              dispatch(addTodo(event.target.value));\n            }}\n          />\n        </Header>\n        <Content className=\"isoTodoContentBody\">\n          <TodoList\n            todos={todos}\n            deleteTodo={(id) => dispatch(deleteTodo(id))}\n            edittodo={(todo) => dispatch(edittodo(todo))}\n            colors={colors}\n            allCompleted={() => dispatch(allCompleted())}\n            deleteCompleted={() => dispatch(deleteCompleted())}\n          />\n        </Content>\n      </TodoWrapper>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}