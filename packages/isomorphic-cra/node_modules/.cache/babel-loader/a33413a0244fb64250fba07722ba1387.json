{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/shared/components/Algolia/VoiceRecognition.js\";\nimport React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\nimport { VoiceSearchMicIcon, VoiceSearchStopIcon } from '@iso/config/icon.config';\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\nconst options = {\n  autoStart: false\n};\n\nfunction VoiceRecognition() {\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [listening, setListening] = useState(false);\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(VoiceSearchWrapper, {\n    className: \"isoVoiceSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, !listening ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoVoiceSearchStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      SpeechRecognition.startListening();\n      setListening(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VoiceSearchMicIcon, {\n    size: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Start Speaking\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoVoiceSearchRunning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      // SpeechRecognition.setVoice(transcript);\n      resetTranscript();\n      SpeechRecognition.stopListening();\n      setListening(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VoiceSearchStopIcon, {\n    sie: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, transcript)));\n}\n\nVoiceRecognition.propTypes = propTypes;\nexport default VoiceRecognition;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/components/Algolia/VoiceRecognition.js"],"names":["React","useState","PropTypes","SpeechRecognition","useSpeechRecognition","VoiceSearchWrapper","VoiceSearchMicIcon","VoiceSearchStopIcon","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","options","autoStart","VoiceRecognition","listening","setListening","startListening","stopListening"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;AAGA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SACEC,kBADF,EAEEC,mBAFF,QAGO,yBAHP;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEP,SAAS,CAACQ,MADN;AAEhBC,EAAAA,eAAe,EAAET,SAAS,CAACU,IAFX;AAGhBC,EAAAA,gCAAgC,EAAEX,SAAS,CAACY;AAH5B,CAAlB;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAhB;;AAGA,SAASC,gBAAT,GAA4B;AAC1B,QAAM;AAAER,IAAAA,UAAF;AAAcE,IAAAA;AAAd,MAAkCP,oBAAoB,EAA5D;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;AACA,MAAI,CAACE,iBAAiB,CAACU,gCAAlB,EAAL,EAA2D;AACzD,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACK,SAAD,gBACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbf,MAAAA,iBAAiB,CAACiB,cAAlB;AACAD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADD,gBAaC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAM;AACb;AACAR,MAAAA,eAAe;AACfR,MAAAA,iBAAiB,CAACkB,aAAlB;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,UAAP,CAZF,CAdJ,CADF;AAgCD;;AACDQ,gBAAgB,CAACT,SAAjB,GAA6BA,SAA7B;AACA,eAAeS,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\nimport {\n  VoiceSearchMicIcon,\n  VoiceSearchStopIcon,\n} from '@iso/config/icon.config';\n\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n};\nconst options = {\n  autoStart: false,\n};\nfunction VoiceRecognition() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const [listening, setListening] = useState(false);\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n  return (\n    <VoiceSearchWrapper className=\"isoVoiceSearch\">\n      {!listening ? (\n        <div className=\"isoVoiceSearchStart\">\n          <button\n            onClick={() => {\n              SpeechRecognition.startListening();\n              setListening(true);\n            }}\n          >\n            <VoiceSearchMicIcon size={17} />\n          </button>\n          <span>Start Speaking</span>\n        </div>\n      ) : (\n        <div className=\"isoVoiceSearchRunning\">\n          <button\n            onClick={() => {\n              // SpeechRecognition.setVoice(transcript);\n              resetTranscript();\n              SpeechRecognition.stopListening();\n              setListening(false);\n            }}\n          >\n            <VoiceSearchStopIcon sie={17} />\n          </button>\n          {/* <span>Search</span> */}\n          <span>{transcript}</span>\n        </div>\n      )}\n    </VoiceSearchWrapper>\n  );\n}\nVoiceRecognition.propTypes = propTypes;\nexport default VoiceRecognition;\n"]},"metadata":{},"sourceType":"module"}