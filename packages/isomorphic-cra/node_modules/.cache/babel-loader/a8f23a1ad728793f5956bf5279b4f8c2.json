{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/shared/containers/Recipes/Recipes.js\";\nimport React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport throttle from \"lodash/throttle\";\nimport Toggle from \"./Toggle\";\nimport ListItem from \"./ShuffleList\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { SortableCardWrapper } from \"./Shuffle.styles\";\nimport { BarsOutlined, AppstoreOutlined } from \"@ant-design/icons\";\nexport default function () {\n  const articles = [{\n    id: \"a\",\n    // desc: <IntlMessages id=\"shuffle.descriptionOne\" />,\n    desc: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }),\n    img: /*#__PURE__*/React.createElement(\"img\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    })\n  }];\n  const [state, setState] = React.useState({\n    removedArticles: [],\n    view: \"grid\",\n    order: \"asc\",\n    sortingMethod: \"chronological\",\n    enterLeaveAnimation: \"accordionVertical\",\n    articles\n  });\n\n  function toggleList() {\n    setState({ ...state,\n      view: \"list\",\n      enterLeaveAnimation: \"accordionVertical\"\n    });\n  }\n\n  function toggleGrid() {\n    setState({ ...state,\n      view: \"grid\",\n      enterLeaveAnimation: \"accordionHorizontal\"\n    });\n  }\n\n  function moveArticle(source, dest, id) {\n    const sourceArticles = state[source].slice();\n    let destArticles = state[dest].slice();\n    if (!sourceArticles.length) return; // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0;\n    console.log(i); // If the article is already removed, do nothing.\n\n    if (i === -1) return;\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n    setState({ ...state,\n      [source]: sourceArticles,\n      [dest]: destArticles\n    });\n  }\n\n  function renderArticles() {\n    return state.articles.map((article, i) => {\n      return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n        key: article.id,\n        view: state.view,\n        index: i,\n        clickHandler: throttle(() => moveArticle(\"articles\", \"removedArticles\", article.id), 800)\n      }, article, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(SortableCardWrapper, {\n    id: \"shuffle\",\n    className: `isomorphicSortableCardsHolder ${state.view}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"isoControlBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoViewBtnGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: toggleList,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }),\n    icon: /*#__PURE__*/React.createElement(BarsOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }),\n    active: state.view === \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    clickHandler: toggleGrid,\n    text: /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"toggle.grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }),\n    icon: /*#__PURE__*/React.createElement(AppstoreOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }),\n    active: state.view === \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoSortableCardsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlipMove, {\n    staggerDurationBy: \"30\",\n    duration: 500,\n    enterAnimation: state.enterLeaveAnimation,\n    leaveAnimation: state.enterLeaveAnimation,\n    typeName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, renderArticles())));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/containers/Recipes/Recipes.js"],"names":["React","FlipMove","throttle","Toggle","ListItem","IntlMessages","SortableCardWrapper","BarsOutlined","AppstoreOutlined","articles","id","desc","img","state","setState","useState","removedArticles","view","order","sortingMethod","enterLeaveAnimation","toggleList","toggleGrid","moveArticle","source","dest","sourceArticles","slice","destArticles","length","i","findIndex","article","console","log","concat","splice","renderArticles","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FlipMove from \"react-flip-move\";\nimport throttle from \"lodash/throttle\";\nimport Toggle from \"./Toggle\";\nimport ListItem from \"./ShuffleList\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { SortableCardWrapper } from \"./Shuffle.styles\";\nimport { BarsOutlined, AppstoreOutlined } from \"@ant-design/icons\";\nexport default function () {\n  const articles = [\n    {\n      id: \"a\",\n      // desc: <IntlMessages id=\"shuffle.descriptionOne\" />,\n      desc: <div></div>,\n      img: <img />,\n    },\n  ];\n\n  const [state, setState] = React.useState({\n    removedArticles: [],\n    view: \"grid\",\n    order: \"asc\",\n    sortingMethod: \"chronological\",\n    enterLeaveAnimation: \"accordionVertical\",\n    articles,\n  });\n\n  function toggleList() {\n    setState({\n      ...state,\n      view: \"list\",\n      enterLeaveAnimation: \"accordionVertical\",\n    });\n  }\n\n  function toggleGrid() {\n    setState({\n      ...state,\n      view: \"grid\",\n      enterLeaveAnimation: \"accordionHorizontal\",\n    });\n  }\n\n  function moveArticle(source, dest, id) {\n    const sourceArticles = state[source].slice();\n    let destArticles = state[dest].slice();\n    if (!sourceArticles.length) return;\n\n    // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n    const i = id ? sourceArticles.findIndex((article) => article.id === id) : 0;\n\n    console.log(i);\n    // If the article is already removed, do nothing.\n    if (i === -1) return;\n\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n\n    setState({\n      ...state,\n      [source]: sourceArticles,\n      [dest]: destArticles,\n    });\n  }\n\n  function renderArticles() {\n    return state.articles.map((article, i) => {\n      return (\n        <ListItem\n          key={article.id}\n          view={state.view}\n          index={i}\n          clickHandler={throttle(\n            () => moveArticle(\"articles\", \"removedArticles\", article.id),\n            800\n          )}\n          {...article}\n        />\n      );\n    });\n  }\n\n  return (\n    <SortableCardWrapper\n      id=\"shuffle\"\n      className={`isomorphicSortableCardsHolder ${state.view}`}\n    >\n      <header className=\"isoControlBar\">\n        <div className=\"isoViewBtnGroup\">\n          <Toggle\n            clickHandler={toggleList}\n            text={<IntlMessages id=\"toggle.list\" />}\n            icon={<BarsOutlined />}\n            active={state.view === \"list\"}\n          />\n          <Toggle\n            clickHandler={toggleGrid}\n            text={<IntlMessages id=\"toggle.grid\" />}\n            icon={<AppstoreOutlined />}\n            active={state.view === \"grid\"}\n          />\n        </div>\n      </header>\n\n      <div className=\"isoSortableCardsContainer\">\n        <FlipMove\n          staggerDurationBy=\"30\"\n          duration={500}\n          enterAnimation={state.enterLeaveAnimation}\n          leaveAnimation={state.enterLeaveAnimation}\n          typeName=\"ul\"\n        >\n          {renderArticles()}\n        </FlipMove>\n      </div>\n    </SortableCardWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}