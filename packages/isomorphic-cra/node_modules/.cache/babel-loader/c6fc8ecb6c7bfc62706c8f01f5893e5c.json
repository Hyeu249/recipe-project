{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/isomorphic-all/shared/containers/Forms/Upload/Upload.js\";\nimport React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Modal from '@iso/components/Feedback/Modal';\nimport Upload from '@iso/components/uielements/upload';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nexport default function () {\n  const [state, setState] = React.useState({\n    previewVisible: false,\n    previewImage: '',\n    fileList: [{\n      uid: -1,\n      name: 'xxx.png',\n      status: 'done',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n    }]\n  });\n\n  const handleCancel = () => setState({\n    previewVisible: false\n  });\n\n  const handlePreview = file => {\n    setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true\n    });\n  };\n\n  const handleChange = ({\n    fileList\n  }) => setState({\n    fileList\n  });\n\n  const {\n    previewVisible,\n    previewImage,\n    fileList\n  } = state;\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"isoUploadBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"isoUploadText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n  return /*#__PURE__*/React.createElement(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(Box, {\n    title: \"Search\",\n    subtitle: \"You could pass AutoComplete.Option as children of AutoComplete, instead of using dataSource\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContentHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    action: \"//jsonplaceholder.typicode.com/posts/\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: handlePreview,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, fileList.length >= 3 ? null : uploadButton), /*#__PURE__*/React.createElement(Modal, {\n    visible: previewVisible,\n    footer: null,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: '100%'\n    },\n    src: previewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/tht-hieu/Desktop/isomorphic-all/shared/containers/Forms/Upload/Upload.js"],"names":["React","PlusOutlined","Modal","Upload","PageHeader","Box","LayoutWrapper","ContentHolder","state","setState","useState","previewVisible","previewImage","fileList","uid","name","status","url","handleCancel","handlePreview","file","thumbUrl","handleChange","uploadButton","length","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,eAAe,YAAY;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe;AACvCC,IAAAA,cAAc,EAAE,KADuB;AAEvCC,IAAAA,YAAY,EAAE,EAFyB;AAGvCC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,GAAG,EAAE,CAAC,CADR;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,MAAM,EAAE,MAHV;AAIEC,MAAAA,GAAG,EACD;AALJ,KADQ;AAH6B,GAAf,CAA1B;;AAcA,QAAMC,YAAY,GAAG,MAAMT,QAAQ,CAAC;AAAEE,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAAnC;;AAEA,QAAMQ,aAAa,GAAIC,IAAD,IAAU;AAC9BX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,YAAY,EAAEQ,IAAI,CAACH,GAAL,IAAYG,IAAI,CAACC,QADxB;AAEPV,MAAAA,cAAc,EAAE;AAFT,KAAD,CAAR;AAID,GALD;;AAOA,QAAMW,YAAY,GAAG,CAAC;AAAET,IAAAA;AAAF,GAAD,KAAkBJ,QAAQ,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAA/C;;AAEA,QAAM;AAAEF,IAAAA,cAAF;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,MAA6CL,KAAnD;AACA,QAAMe,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,QAAQ,EAAC,6FAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,uCADT;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,QAAQ,EAAEV,QAHZ;AAIE,IAAA,SAAS,EAAEM,aAJb;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGT,QAAQ,CAACW,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8BD,YAPjC,CADF,eAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEZ,cAAhB;AAAgC,IAAA,MAAM,EAAE,IAAxC;AAA8C,IAAA,QAAQ,EAAEO,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,SAAT;AAAmB,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAA1B;AAA6C,IAAA,GAAG,EAAEb,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAJF,CAHF,CADF;AAyBD","sourcesContent":["import React from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Modal from '@iso/components/Feedback/Modal';\nimport Upload from '@iso/components/uielements/upload';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport ContentHolder from '@iso/components/utility/contentHolder';\n\nexport default function () {\n  const [state, setState] = React.useState({\n    previewVisible: false,\n    previewImage: '',\n    fileList: [\n      {\n        uid: -1,\n        name: 'xxx.png',\n        status: 'done',\n        url:\n          'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n      },\n    ],\n  });\n\n  const handleCancel = () => setState({ previewVisible: false });\n\n  const handlePreview = (file) => {\n    setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n\n  const handleChange = ({ fileList }) => setState({ fileList });\n\n  const { previewVisible, previewImage, fileList } = state;\n  const uploadButton = (\n    <div className=\"isoUploadBtn\">\n      <PlusOutlined />\n      <span className=\"isoUploadText\">Upload</span>\n    </div>\n  );\n  return (\n    <LayoutWrapper>\n      <PageHeader>Upload</PageHeader>\n\n      <Box\n        title=\"Search\"\n        subtitle=\"You could pass AutoComplete.Option as children of AutoComplete, instead of using dataSource\"\n      >\n        <ContentHolder>\n          <Upload\n            action=\"//jsonplaceholder.typicode.com/posts/\"\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={handlePreview}\n            onChange={handleChange}\n          >\n            {fileList.length >= 3 ? null : uploadButton}\n          </Upload>\n          <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n        </ContentHolder>\n      </Box>\n    </LayoutWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}