{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/isomorphic-all/shared/containers/ScrumBoard/Column/ColumnCreateOrUpdate/ColumnCreateOrUpdate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport { v4 as uuidV4 } from 'uuid';\nimport RenderColumnForm from '@iso/components/ScrumBoard/RenderColumnForm/RenderColumnForm';\nimport { dateFormat } from '@iso/components/ScrumBoard/FieldFormats';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nconst initialValues = {\n  id: '',\n  title: '',\n  board_id: '',\n  task_orders: [],\n  editing: false,\n  created_at: moment(Date.now(dateFormat)).toString(),\n  updated_at: moment(Date.now(dateFormat))\n};\n\nconst CreateOrUpdateColumn = props => {\n  const initials = { ...initialValues,\n    ...props.initials,\n    updated_at: moment(Date.now(dateFormat)).toString()\n  };\n\n  const handleSubmit = values => {\n    if (!values.editing) {\n      values.id = uuidV4();\n      values.board_id = props.boardId;\n      values.editing = false;\n    }\n\n    props.createOrUpdateColumnWatcher({\n      column: values,\n      board_id: props.boardId\n    });\n\n    if (!values.editing) {\n      props.onCancel();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initials,\n    onSubmit: handleSubmit,\n    render: formikProps => /*#__PURE__*/React.createElement(RenderColumnForm, Object.assign({}, formikProps, {\n      onCancel: props.onCancel,\n      initials: props.initials,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default connect(null, { ...scrumBoardActions\n})(CreateOrUpdateColumn);","map":{"version":3,"sources":["/home/tht-hieu/Desktop/isomorphic-all/shared/containers/ScrumBoard/Column/ColumnCreateOrUpdate/ColumnCreateOrUpdate.js"],"names":["React","connect","moment","Formik","v4","uuidV4","RenderColumnForm","dateFormat","scrumBoardActions","initialValues","id","title","board_id","task_orders","editing","created_at","Date","now","toString","updated_at","CreateOrUpdateColumn","props","initials","handleSubmit","values","boardId","createOrUpdateColumnWatcher","column","onCancel","formikProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,gBAAP,MAA6B,8DAA7B;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAE,EADgB;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,WAAW,EAAE,EAJO;AAKpBC,EAAAA,OAAO,EAAE,KALW;AAMpBC,EAAAA,UAAU,EAAEb,MAAM,CAACc,IAAI,CAACC,GAAL,CAASV,UAAT,CAAD,CAAN,CAA6BW,QAA7B,EANQ;AAOpBC,EAAAA,UAAU,EAAEjB,MAAM,CAACc,IAAI,CAACC,GAAL,CAASV,UAAT,CAAD;AAPE,CAAtB;;AAUA,MAAMa,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAMC,QAAQ,GAAG,EACf,GAAGb,aADY;AAEf,OAAGY,KAAK,CAACC,QAFM;AAGfH,IAAAA,UAAU,EAAEjB,MAAM,CAACc,IAAI,CAACC,GAAL,CAASV,UAAT,CAAD,CAAN,CAA6BW,QAA7B;AAHG,GAAjB;;AAMA,QAAMK,YAAY,GAAIC,MAAD,IAAY;AAC/B,QAAI,CAACA,MAAM,CAACV,OAAZ,EAAqB;AACnBU,MAAAA,MAAM,CAACd,EAAP,GAAYL,MAAM,EAAlB;AACAmB,MAAAA,MAAM,CAACZ,QAAP,GAAkBS,KAAK,CAACI,OAAxB;AACAD,MAAAA,MAAM,CAACV,OAAP,GAAiB,KAAjB;AACD;;AACDO,IAAAA,KAAK,CAACK,2BAAN,CAAkC;AAChCC,MAAAA,MAAM,EAAEH,MADwB;AAEhCZ,MAAAA,QAAQ,EAAES,KAAK,CAACI;AAFgB,KAAlC;;AAIA,QAAI,CAACD,MAAM,CAACV,OAAZ,EAAqB;AACnBO,MAAAA,KAAK,CAACO,QAAN;AACD;AACF,GAbD;;AAeA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEN,QADjB;AAEE,IAAA,QAAQ,EAAEC,YAFZ;AAGE,IAAA,MAAM,EAAGM,WAAD,iBACN,oBAAC,gBAAD,oBACMA,WADN;AAEE,MAAA,QAAQ,EAAER,KAAK,CAACO,QAFlB;AAGE,MAAA,QAAQ,EAAEP,KAAK,CAACC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CAnCD;;AAoCA,eAAerB,OAAO,CAAC,IAAD,EAAO,EAC3B,GAAGO;AADwB,CAAP,CAAP,CAEZY,oBAFY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport { v4 as uuidV4 } from 'uuid';\nimport RenderColumnForm from '@iso/components/ScrumBoard/RenderColumnForm/RenderColumnForm';\nimport { dateFormat } from '@iso/components/ScrumBoard/FieldFormats';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\n\nconst initialValues = {\n  id: '',\n  title: '',\n  board_id: '',\n  task_orders: [],\n  editing: false,\n  created_at: moment(Date.now(dateFormat)).toString(),\n  updated_at: moment(Date.now(dateFormat)),\n};\n\nconst CreateOrUpdateColumn = (props) => {\n  const initials = {\n    ...initialValues,\n    ...props.initials,\n    updated_at: moment(Date.now(dateFormat)).toString(),\n  };\n\n  const handleSubmit = (values) => {\n    if (!values.editing) {\n      values.id = uuidV4();\n      values.board_id = props.boardId;\n      values.editing = false;\n    }\n    props.createOrUpdateColumnWatcher({\n      column: values,\n      board_id: props.boardId,\n    });\n    if (!values.editing) {\n      props.onCancel();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initials}\n      onSubmit={handleSubmit}\n      render={(formikProps) => (\n        <RenderColumnForm\n          {...formikProps}\n          onCancel={props.onCancel}\n          initials={props.initials}\n        />\n      )}\n    />\n  );\n};\nexport default connect(null, {\n  ...scrumBoardActions,\n})(CreateOrUpdateColumn);\n"]},"metadata":{},"sourceType":"module"}