{"ast":null,"code":"var _jsxFileName = \"/home/tht-hieu/Desktop/template-copy/shared/containers/ScrumBoard/Board/BoardCreateOrUpdate/BoardCreateOrUpdate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport { v4 as uuidV4 } from 'uuid';\nimport RenderBoardForm from '@iso/components/ScrumBoard/RenderBoardForm/RenderBoardForm';\nimport { dateFormat } from '@iso/components/ScrumBoard/FieldFormats';\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\nimport ArrowIcon from \"@iso/assets/images/icon/04-icon.svg\";\nimport CloseIcon from \"@iso/assets/images/icon/07-icon.svg\";\nimport { Wrapper, FormWrapper, Heading, TopBar } from './BoardCreateOrUpdate.style';\nconst initialValues = {\n  id: '',\n  column_orders: [],\n  title: '',\n  category: '',\n  progress: '',\n  thumb: '',\n  open_to_company: false,\n  open_to_members: true,\n  editing: false,\n  created_at: moment(Date.now(dateFormat)).toString(),\n  updated_at: moment(Date.now(dateFormat)),\n  selectOptions: ['Software', 'OPs', 'Service Desk', 'Business', 'General'],\n  selectAssignees: ['Mark', 'Bob', 'Anthony']\n};\n\nconst CreateOrUpdateBoard = props => {\n  const initials = { ...initialValues,\n    ...props.board,\n    updated_at: moment(Date.now(dateFormat)).toString()\n  };\n\n  const handleSubmit = values => {\n    if (!values.editing) {\n      values.id = uuidV4();\n    }\n\n    props.createOrUpdateBoardWatcher(values);\n    props.history.push(`/dashboard/scrum-board/project/${values.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconSvg, {\n    src: ArrowIcon,\n    border: \"none\",\n    padding: '0',\n    alt: \"Arrow Icon\",\n    style: {\n      transform: 'rotateY(180deg)'\n    },\n    onClick: () => window.history.back(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconSvg, {\n    src: CloseIcon,\n    border: \"none\",\n    padding: '0',\n    alt: \"Close Icon\",\n    onClick: () => props.history.push(`/dashboard/scrum-board`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Create New Project\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initials,\n    onSubmit: handleSubmit,\n    render: RenderBoardForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connect((state, ownProps) => ({\n  board: state.scrumBoard.boards[ownProps.match.params.id]\n}), { ...scrumBoardActions\n})(CreateOrUpdateBoard);","map":{"version":3,"sources":["/home/tht-hieu/Desktop/template-copy/shared/containers/ScrumBoard/Board/BoardCreateOrUpdate/BoardCreateOrUpdate.js"],"names":["React","connect","Formik","moment","v4","uuidV4","RenderBoardForm","dateFormat","IconSvg","scrumBoardActions","Wrapper","FormWrapper","Heading","TopBar","initialValues","id","column_orders","title","category","progress","thumb","open_to_company","open_to_members","editing","created_at","Date","now","toString","updated_at","selectOptions","selectAssignees","CreateOrUpdateBoard","props","initials","board","handleSubmit","values","createOrUpdateBoardWatcher","history","push","ArrowIcon","transform","window","back","CloseIcon","state","ownProps","scrumBoard","boards","match","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport { v4 as uuidV4 } from 'uuid';\nimport RenderBoardForm from '@iso/components/ScrumBoard/RenderBoardForm/RenderBoardForm';\nimport { dateFormat } from '@iso/components/ScrumBoard/FieldFormats';\nimport { IconSvg } from '@iso/components/ScrumBoard/IconSvg/IconSvg';\nimport scrumBoardActions from '@iso/redux/scrumBoard/actions';\n\nimport ArrowIcon from '@iso/assets/images/icon/04-icon.svg';\nimport CloseIcon from '@iso/assets/images/icon/07-icon.svg';\nimport {\n  Wrapper,\n  FormWrapper,\n  Heading,\n  TopBar,\n} from './BoardCreateOrUpdate.style';\nconst initialValues = {\n  id: '',\n  column_orders: [],\n  title: '',\n  category: '',\n  progress: '',\n  thumb: '',\n  open_to_company: false,\n  open_to_members: true,\n  editing: false,\n  created_at: moment(Date.now(dateFormat)).toString(),\n  updated_at: moment(Date.now(dateFormat)),\n  selectOptions: ['Software', 'OPs', 'Service Desk', 'Business', 'General'],\n  selectAssignees: ['Mark', 'Bob', 'Anthony'],\n};\n\nconst CreateOrUpdateBoard = (props) => {\n  const initials = {\n    ...initialValues,\n    ...props.board,\n    updated_at: moment(Date.now(dateFormat)).toString(),\n  };\n\n  const handleSubmit = (values) => {\n    if (!values.editing) {\n      values.id = uuidV4();\n    }\n    props.createOrUpdateBoardWatcher(values);\n    props.history.push(`/dashboard/scrum-board/project/${values.id}`);\n  };\n\n  return (\n    <Wrapper>\n      <TopBar>\n        <IconSvg\n          src={ArrowIcon}\n          border=\"none\"\n          padding={'0'}\n          alt=\"Arrow Icon\"\n          style={{ transform: 'rotateY(180deg)' }}\n          onClick={() => window.history.back()}\n        />\n        <IconSvg\n          src={CloseIcon}\n          border=\"none\"\n          padding={'0'}\n          alt=\"Close Icon\"\n          onClick={() => props.history.push(`/dashboard/scrum-board`)}\n        />\n      </TopBar>\n      <FormWrapper>\n        <Heading>Create New Project</Heading>\n        <Formik\n          initialValues={initials}\n          onSubmit={handleSubmit}\n          render={RenderBoardForm}\n        />\n      </FormWrapper>\n    </Wrapper>\n  );\n};\nexport default connect(\n  (state, ownProps) => ({\n    board: state.scrumBoard.boards[ownProps.match.params.id],\n  }),\n  {\n    ...scrumBoardActions,\n  }\n)(CreateOrUpdateBoard);\n"]},"metadata":{},"sourceType":"module"}