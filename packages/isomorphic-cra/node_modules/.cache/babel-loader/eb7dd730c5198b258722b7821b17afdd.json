{"ast":null,"code":"import \"antd/es/avatar/style/css\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/tooltip/style/css\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/list/style/css\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/comment/style/css\";\nimport _Comment from \"antd/es/comment\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/tht-hieu/Desktop/recipe-project/shared/components/ScrumBoard/Comments/Comments.js\";\nimport React from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport moment from 'moment';\nimport { CommentListWrapper } from './Comments.style';\nconst TextArea = _Input.TextArea;\n\nconst CommentList = ({\n  comments\n}) => /*#__PURE__*/React.createElement(CommentListWrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(_List, {\n  dataSource: comments // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n  ,\n  itemLayout: \"horizontal\",\n  renderItem: props => /*#__PURE__*/React.createElement(_Comment, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 30\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(_Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, \"Add Comment\")));\n\nclass Comments extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [{\n        actions: [/*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }, \"Reply to\")],\n        author: 'Han Solo',\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n        datetime: /*#__PURE__*/React.createElement(_Tooltip, {\n          title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, moment().subtract(1, 'days').fromNow()))\n      }],\n      submitting: false,\n      value: ''\n    };\n\n    this.handleSubmit = () => {\n      if (!this.state.value) {\n        return;\n      }\n\n      this.setState({\n        submitting: true\n      });\n      setTimeout(() => {\n        this.setState({\n          submitting: false,\n          value: '',\n          comments: [{\n            actions: [/*#__PURE__*/React.createElement(\"span\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }\n            }, \"Reply to\")],\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 22\n              }\n            }, this.state.value),\n            datetime: moment().fromNow()\n          }, ...this.state.comments]\n        });\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      comments,\n      submitting,\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n      comments: comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(_Comment, {\n      avatar: /*#__PURE__*/React.createElement(_Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        alt: \"Han Solo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }),\n      content: /*#__PURE__*/React.createElement(Editor, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        submitting: submitting,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/components/ScrumBoard/Comments/Comments.js"],"names":["React","Form","moment","CommentListWrapper","TextArea","CommentList","comments","props","Editor","onChange","onSubmit","submitting","value","Comments","Component","state","actions","author","avatar","content","datetime","subtract","format","fromNow","handleSubmit","setState","setTimeout","handleChange","e","target","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { Comment, Avatar, Button, List, Input, Tooltip } from 'antd';\nimport moment from 'moment';\n\nimport { CommentListWrapper } from './Comments.style';\n\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({ comments }) => (\n  <CommentListWrapper>\n    <List\n      dataSource={comments}\n      // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n      itemLayout=\"horizontal\"\n      renderItem={(props) => <Comment {...props} />}\n    />\n  </CommentListWrapper>\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <div>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        htmlType=\"submit\"\n        loading={submitting}\n        onClick={onSubmit}\n        type=\"primary\"\n      >\n        Add Comment\n      </Button>\n    </Form.Item>\n  </div>\n);\n\nclass Comments extends React.Component {\n  state = {\n    comments: [\n      {\n        actions: [<span>Reply to</span>],\n        author: 'Han Solo',\n        avatar:\n          'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        content: (\n          <p>\n            We supply a series of design principles, practical patterns and high\n            quality design resources (Sketch and Axure), to help people create\n            their product prototypes beautifully and efficiently.\n          </p>\n        ),\n        datetime: (\n          <Tooltip\n            title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}\n          >\n            <span>{moment().subtract(1, 'days').fromNow()}</span>\n          </Tooltip>\n        ),\n      },\n    ],\n    submitting: false,\n    value: '',\n  };\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [\n          {\n            actions: [<span>Reply to</span>],\n            author: 'Han Solo',\n            avatar:\n              'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: <p>{this.state.value}</p>,\n            datetime: moment().fromNow(),\n          },\n          ...this.state.comments,\n        ],\n      });\n    }, 1000);\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { comments, submitting, value } = this.state;\n\n    return (\n      <div>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}