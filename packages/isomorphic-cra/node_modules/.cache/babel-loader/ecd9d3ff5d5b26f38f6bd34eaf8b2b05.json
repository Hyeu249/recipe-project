{"ast":null,"code":"const scrumBoardActions = {\n  //BOARD\n  CREATE_OR_UPDATE_BOARD_WATCHER: \"CREATE_OR_UPDATE_BOARD_WATCHER\",\n  CREATE_OR_UPDATE_BOARD: \"CREATE_OR_UPDATE_BOARD\",\n  EDIT_BOARD: \"EDIT_BOARD\",\n  DELETE_BOARD_WATCHER: \"DELETE_BOARD_WATCHER\",\n  DELETE_BOARD: \"DELETE_BOARD\",\n  SELECT_BOARD: \"SELECT_BOARD\",\n  //COLUMN\n  CREATE_OR_UPDATE_COLUMN_WATCHER: \"CREATE_OR_UPDATE_COLUMN_WATCHER\",\n  CREATE_OR_UPDATE_COLUMN: \"CREATE_OR_UPDATE_COLUMN\",\n  EDIT_COLUMN: \"EDIT_COLUMN\",\n  CANCEL_EDIT_COLUMN: \"CANCEL_EDIT_COLUMN\",\n  DELETE_COLUMN_WATCHER: \"DELETE_COLUMN_WATCHER\",\n  DELETE_COLUMN: \"DELETE_COLUMN\",\n  RESET_COLUMN: \"RESET_COLUMN\",\n  MOVE_COLUMN_WATCHER: \"MOVE_COLUMN_WATCHER\",\n  SET_MOVED_COLUMN: \"SET_MOVED_COLUMN\",\n  DUBLICATE_COLUMN: \"DUBLICATE_COLUMN\",\n  //TASK\n  CREATE_OR_UPDATE_TASK_WATCHER: \"CREATE_OR_UPDATE_TASK_WATCHER\",\n  CREATE_OR_UPDATE_TASK: \"CREATE_OR_UPDATE_TASK\",\n  EDIT_TASK: \"EDIT_TASK\",\n  CANCEL_EDIT_TASK: \"CANCEL_EDIT_TASK\",\n  DELETE_TASK_WATCHER: \"DELETE_TASK_WATCHER\",\n  DELETE_TASK: \"DELETE_TASK\",\n  RESET_TASK: \"RESET_TASK\",\n  MOVE_TASK_WATCHER: \"MOVE_TASK_WATCHER\",\n  SET_MOVED_TASK: \"SET_MOVED_TASK\",\n  DUBLICATE_TASK: \"DUBLICATE_TASK\",\n  // SEARCH\n  SET_SEARCH_TEXT: \"SET_SEARCH_TEXT\",\n  // LOAD DATA\n  LOAD_BOARDS_DATA_SAGA: \"LOAD_BOARDS_DATA_SAGA\",\n  LOAD_CURRENT_BOARD_DATA_SAGA: \"LOAD_CURRENT_BOARD_DATA_SAGA\",\n  SET_BOARDS_DATA: \"SET_BOARDS_DATA\",\n  SET_CURRENT_BOARD_DATA: \"SET_CURRENT_BOARD_DATA\",\n  // LABELS\n  CREATE_OR_UPDATE_LABEL: \"CREATE_OR_UPDATE_LABEL\",\n  EDIT_LABEL: \"EDIT_LABEL\",\n  DELETE_LABEL: \"DELETE_LABEL\",\n  // Load Data Actions\n  boardsRenderWatcher: () => ({\n    type: scrumBoardActions.LOAD_BOARDS_DATA_SAGA\n  }),\n  setBoardsData: boards => ({\n    type: scrumBoardActions.SET_BOARDS_DATA,\n    payload: boards\n  }),\n  boardRenderWatcher: boardId => ({\n    type: scrumBoardActions.LOAD_CURRENT_BOARD_DATA_SAGA,\n    payload: boardId\n  }),\n  setBoardData: boardData => ({\n    type: scrumBoardActions.SET_CURRENT_BOARD_DATA,\n    payload: boardData\n  }),\n  // Task Actions\n  createOrUpdateTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK_WATCHER,\n      payload\n    };\n  },\n  createOrUpdateTask: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK,\n      payload\n    };\n  },\n  editTask: payload => {\n    return {\n      type: scrumBoardActions.EDIT_TASK,\n      payload\n    };\n  },\n  cancelEditTask: payload => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_TASK,\n      payload\n    };\n  },\n  deleteTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.DELETE_TASK_WATCHER,\n      payload\n    };\n  },\n  deleteTask: payload => {\n    return {\n      type: scrumBoardActions.DELETE_TASK,\n      payload\n    };\n  },\n  resetTask: payload => {\n    return {\n      type: scrumBoardActions.RESET_TASK,\n      payload\n    };\n  },\n  setSearchText: payload => {\n    return {\n      type: scrumBoardActions.SET_SEARCH_TEXT,\n      payload\n    };\n  },\n  moveTaskWatcher: payload => {\n    return {\n      type: scrumBoardActions.MOVE_TASK_WATCHER,\n      payload\n    };\n  },\n  setMovedTask: payload => {\n    return {\n      type: scrumBoardActions.SET_MOVED_TASK,\n      payload\n    };\n  },\n  // Column Actions\n  createOrUpdateColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  createOrUpdateColumn: payload => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN,\n      payload\n    };\n  },\n  editColumn: payload => {\n    return {\n      type: scrumBoardActions.EDIT_COLUMN,\n      payload\n    };\n  },\n  cancelEditColumn: payload => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_COLUMN,\n      payload\n    };\n  },\n  deleteColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  deleteColumn: payload => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN,\n      payload\n    };\n  },\n  resetColumn: payload => {\n    return {\n      type: scrumBoardActions.RESET_COLUMN,\n      payload\n    };\n  },\n  moveColumnWatcher: payload => {\n    return {\n      type: scrumBoardActions.MOVE_COLUMN_WATCHER,\n      payload\n    };\n  },\n  setMovedColumn: payload => {\n    return {\n      type: scrumBoardActions.SET_MOVED_COLUMN,\n      payload\n    };\n  },\n  // Board Actions\n  createOrUpdateBoardWatcher: board => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD_WATCHER,\n      payload: board\n    };\n  },\n  createOrUpdateBoard: board => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD,\n      payload: board\n    };\n  },\n  editBoard: board => {\n    return {\n      type: scrumBoardActions.EDIT_BOARD,\n      payload: board\n    };\n  },\n  deleteBoardWatcher: boardID => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD_WATCHER,\n      payload: boardID\n    };\n  },\n  deleteBoard: boardID => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD,\n      payload: boardID\n    };\n  },\n  // Label Actions\n  createOrUpdateLabel: label => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_LABEL,\n      payload: label\n    };\n  },\n  editLabel: label => {\n    return {\n      type: scrumBoardActions.EDIT_LABEL,\n      payload: label\n    };\n  },\n  deleteLabel: labelID => {\n    return {\n      type: scrumBoardActions.DELETE_LABEL,\n      payload: labelID\n    };\n  }\n};\nexport default scrumBoardActions;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/redux/scrumBoard/actions.js"],"names":["scrumBoardActions","CREATE_OR_UPDATE_BOARD_WATCHER","CREATE_OR_UPDATE_BOARD","EDIT_BOARD","DELETE_BOARD_WATCHER","DELETE_BOARD","SELECT_BOARD","CREATE_OR_UPDATE_COLUMN_WATCHER","CREATE_OR_UPDATE_COLUMN","EDIT_COLUMN","CANCEL_EDIT_COLUMN","DELETE_COLUMN_WATCHER","DELETE_COLUMN","RESET_COLUMN","MOVE_COLUMN_WATCHER","SET_MOVED_COLUMN","DUBLICATE_COLUMN","CREATE_OR_UPDATE_TASK_WATCHER","CREATE_OR_UPDATE_TASK","EDIT_TASK","CANCEL_EDIT_TASK","DELETE_TASK_WATCHER","DELETE_TASK","RESET_TASK","MOVE_TASK_WATCHER","SET_MOVED_TASK","DUBLICATE_TASK","SET_SEARCH_TEXT","LOAD_BOARDS_DATA_SAGA","LOAD_CURRENT_BOARD_DATA_SAGA","SET_BOARDS_DATA","SET_CURRENT_BOARD_DATA","CREATE_OR_UPDATE_LABEL","EDIT_LABEL","DELETE_LABEL","boardsRenderWatcher","type","setBoardsData","boards","payload","boardRenderWatcher","boardId","setBoardData","boardData","createOrUpdateTaskWatcher","createOrUpdateTask","editTask","cancelEditTask","deleteTaskWatcher","deleteTask","resetTask","setSearchText","moveTaskWatcher","setMovedTask","createOrUpdateColumnWatcher","createOrUpdateColumn","editColumn","cancelEditColumn","deleteColumnWatcher","deleteColumn","resetColumn","moveColumnWatcher","setMovedColumn","createOrUpdateBoardWatcher","board","createOrUpdateBoard","editBoard","deleteBoardWatcher","boardID","deleteBoard","createOrUpdateLabel","label","editLabel","deleteLabel","labelID"],"mappings":"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","sourcesContent":["const scrumBoardActions = {\n  //BOARD\n  CREATE_OR_UPDATE_BOARD_WATCHER: \"CREATE_OR_UPDATE_BOARD_WATCHER\",\n  CREATE_OR_UPDATE_BOARD: \"CREATE_OR_UPDATE_BOARD\",\n  EDIT_BOARD: \"EDIT_BOARD\",\n  DELETE_BOARD_WATCHER: \"DELETE_BOARD_WATCHER\",\n  DELETE_BOARD: \"DELETE_BOARD\",\n  SELECT_BOARD: \"SELECT_BOARD\",\n\n  //COLUMN\n  CREATE_OR_UPDATE_COLUMN_WATCHER: \"CREATE_OR_UPDATE_COLUMN_WATCHER\",\n  CREATE_OR_UPDATE_COLUMN: \"CREATE_OR_UPDATE_COLUMN\",\n  EDIT_COLUMN: \"EDIT_COLUMN\",\n  CANCEL_EDIT_COLUMN: \"CANCEL_EDIT_COLUMN\",\n  DELETE_COLUMN_WATCHER: \"DELETE_COLUMN_WATCHER\",\n  DELETE_COLUMN: \"DELETE_COLUMN\",\n  RESET_COLUMN: \"RESET_COLUMN\",\n  MOVE_COLUMN_WATCHER: \"MOVE_COLUMN_WATCHER\",\n  SET_MOVED_COLUMN: \"SET_MOVED_COLUMN\",\n  DUBLICATE_COLUMN: \"DUBLICATE_COLUMN\",\n\n  //TASK\n  CREATE_OR_UPDATE_TASK_WATCHER: \"CREATE_OR_UPDATE_TASK_WATCHER\",\n  CREATE_OR_UPDATE_TASK: \"CREATE_OR_UPDATE_TASK\",\n  EDIT_TASK: \"EDIT_TASK\",\n  CANCEL_EDIT_TASK: \"CANCEL_EDIT_TASK\",\n  DELETE_TASK_WATCHER: \"DELETE_TASK_WATCHER\",\n  DELETE_TASK: \"DELETE_TASK\",\n  RESET_TASK: \"RESET_TASK\",\n  MOVE_TASK_WATCHER: \"MOVE_TASK_WATCHER\",\n  SET_MOVED_TASK: \"SET_MOVED_TASK\",\n  DUBLICATE_TASK: \"DUBLICATE_TASK\",\n\n  // SEARCH\n  SET_SEARCH_TEXT: \"SET_SEARCH_TEXT\",\n\n  // LOAD DATA\n  LOAD_BOARDS_DATA_SAGA: \"LOAD_BOARDS_DATA_SAGA\",\n  LOAD_CURRENT_BOARD_DATA_SAGA: \"LOAD_CURRENT_BOARD_DATA_SAGA\",\n  SET_BOARDS_DATA: \"SET_BOARDS_DATA\",\n  SET_CURRENT_BOARD_DATA: \"SET_CURRENT_BOARD_DATA\",\n\n  // LABELS\n  CREATE_OR_UPDATE_LABEL: \"CREATE_OR_UPDATE_LABEL\",\n  EDIT_LABEL: \"EDIT_LABEL\",\n  DELETE_LABEL: \"DELETE_LABEL\",\n\n  // Load Data Actions\n\n  boardsRenderWatcher: () => ({\n    type: scrumBoardActions.LOAD_BOARDS_DATA_SAGA,\n  }),\n\n  setBoardsData: (boards) => ({\n    type: scrumBoardActions.SET_BOARDS_DATA,\n    payload: boards,\n  }),\n\n  boardRenderWatcher: (boardId) => ({\n    type: scrumBoardActions.LOAD_CURRENT_BOARD_DATA_SAGA,\n    payload: boardId,\n  }),\n\n  setBoardData: (boardData) => ({\n    type: scrumBoardActions.SET_CURRENT_BOARD_DATA,\n    payload: boardData,\n  }),\n\n  // Task Actions\n  createOrUpdateTaskWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK_WATCHER,\n      payload,\n    };\n  },\n  createOrUpdateTask: (payload) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_TASK,\n      payload,\n    };\n  },\n\n  editTask: (payload) => {\n    return {\n      type: scrumBoardActions.EDIT_TASK,\n      payload,\n    };\n  },\n\n  cancelEditTask: (payload) => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_TASK,\n      payload,\n    };\n  },\n\n  deleteTaskWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.DELETE_TASK_WATCHER,\n      payload,\n    };\n  },\n  deleteTask: (payload) => {\n    return {\n      type: scrumBoardActions.DELETE_TASK,\n      payload,\n    };\n  },\n\n  resetTask: (payload) => {\n    return {\n      type: scrumBoardActions.RESET_TASK,\n      payload,\n    };\n  },\n\n  setSearchText: (payload) => {\n    return {\n      type: scrumBoardActions.SET_SEARCH_TEXT,\n      payload,\n    };\n  },\n\n  moveTaskWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.MOVE_TASK_WATCHER,\n      payload,\n    };\n  },\n  setMovedTask: (payload) => {\n    return {\n      type: scrumBoardActions.SET_MOVED_TASK,\n      payload,\n    };\n  },\n\n  // Column Actions\n  createOrUpdateColumnWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN_WATCHER,\n      payload,\n    };\n  },\n  createOrUpdateColumn: (payload) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_COLUMN,\n      payload,\n    };\n  },\n\n  editColumn: (payload) => {\n    return {\n      type: scrumBoardActions.EDIT_COLUMN,\n      payload,\n    };\n  },\n\n  cancelEditColumn: (payload) => {\n    return {\n      type: scrumBoardActions.CANCEL_EDIT_COLUMN,\n      payload,\n    };\n  },\n\n  deleteColumnWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN_WATCHER,\n      payload,\n    };\n  },\n  deleteColumn: (payload) => {\n    return {\n      type: scrumBoardActions.DELETE_COLUMN,\n      payload,\n    };\n  },\n\n  resetColumn: (payload) => {\n    return {\n      type: scrumBoardActions.RESET_COLUMN,\n      payload,\n    };\n  },\n  moveColumnWatcher: (payload) => {\n    return {\n      type: scrumBoardActions.MOVE_COLUMN_WATCHER,\n      payload,\n    };\n  },\n  setMovedColumn: (payload) => {\n    return {\n      type: scrumBoardActions.SET_MOVED_COLUMN,\n      payload,\n    };\n  },\n\n  // Board Actions\n  createOrUpdateBoardWatcher: (board) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD_WATCHER,\n      payload: board,\n    };\n  },\n  createOrUpdateBoard: (board) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_BOARD,\n      payload: board,\n    };\n  },\n  editBoard: (board) => {\n    return {\n      type: scrumBoardActions.EDIT_BOARD,\n      payload: board,\n    };\n  },\n  deleteBoardWatcher: (boardID) => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD_WATCHER,\n      payload: boardID,\n    };\n  },\n  deleteBoard: (boardID) => {\n    return {\n      type: scrumBoardActions.DELETE_BOARD,\n      payload: boardID,\n    };\n  },\n\n  // Label Actions\n  createOrUpdateLabel: (label) => {\n    return {\n      type: scrumBoardActions.CREATE_OR_UPDATE_LABEL,\n      payload: label,\n    };\n  },\n  editLabel: (label) => {\n    return {\n      type: scrumBoardActions.EDIT_LABEL,\n      payload: label,\n    };\n  },\n  deleteLabel: (labelID) => {\n    return {\n      type: scrumBoardActions.DELETE_LABEL,\n      payload: labelID,\n    };\n  },\n};\n\nexport default scrumBoardActions;\n"]},"metadata":{},"sourceType":"module"}