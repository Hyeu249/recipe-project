{"ast":null,"code":"import searchQueries from \"./searchQueries\";\nimport { useDispatch } from \"react-redux\";\n\nconst useFunction = () => {\n  const dispatch = useDispatch();\n\n  const searchingForRecipe = value => {\n    console.log(value);\n    const query = searchQueries.filter(query => query === value.trim());\n\n    if (query.length > 0) {\n      fetch(`https://forkify-api.herokuapp.com/api/search?q=${value}`).then(data => data.json()).then(data => {\n        dispatch({\n          type: \"RECIPE_VALUE\",\n          recipeValues: data.recipes\n        });\n        setVisiblity(false);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return [searchingForRecipe];\n};\n\nexport default useFunction;","map":{"version":3,"sources":["/home/tht-hieu/Desktop/recipe-project/shared/components/function/useFunction.js"],"names":["searchQueries","useDispatch","useFunction","dispatch","searchingForRecipe","value","console","log","query","filter","trim","length","fetch","then","data","json","type","recipeValues","recipes","setVisiblity","catch","err"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMG,KAAK,GAAGR,aAAa,CAACS,MAAd,CAAsBD,KAAD,IAAWA,KAAK,KAAKH,KAAK,CAACK,IAAN,EAA1C,CAAd;;AACA,QAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpBC,MAAAA,KAAK,CAAE,kDAAiDP,KAAM,EAAzD,CAAL,CACGQ,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESC,IAAD,IAAU;AACdX,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAE,cADC;AAEPC,UAAAA,YAAY,EAAEH,IAAI,CAACI;AAFZ,SAAD,CAAR;AAIAC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OARH,EASGC,KATH,CASUC,GAAD,IAASf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CATlB;AAUD;AACF,GAfD;;AAiBA,SAAO,CAACjB,kBAAD,CAAP;AACD,CArBD;;AAuBA,eAAeF,WAAf","sourcesContent":["import searchQueries from \"./searchQueries\";\nimport { useDispatch } from \"react-redux\";\n\nconst useFunction = () => {\n  const dispatch = useDispatch();\n\n  const searchingForRecipe = (value) => {\n    console.log(value);\n    const query = searchQueries.filter((query) => query === value.trim());\n    if (query.length > 0) {\n      fetch(`https://forkify-api.herokuapp.com/api/search?q=${value}`)\n        .then((data) => data.json())\n        .then((data) => {\n          dispatch({\n            type: \"RECIPE_VALUE\",\n            recipeValues: data.recipes,\n          });\n          setVisiblity(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return [searchingForRecipe];\n};\n\nexport default useFunction;\n"]},"metadata":{},"sourceType":"module"}